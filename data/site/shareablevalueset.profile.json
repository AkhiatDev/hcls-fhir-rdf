{
    "differential": {
        "element": [
            {
                "path": "ValueSet",
                "max": "1",
                "name": "ShareableValueSet",
                "min": 1,
                "type": [
                    {
                        "code": "ValueSet"
                    }
                ]
            },
            {
                "path": "ValueSet.url",
                "max": "1",
                "min": 1,
                "type": [
                    {
                        "code": "uri"
                    }
                ]
            },
            {
                "path": "ValueSet.version",
                "max": "1",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.name",
                "max": "1",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.status",
                "max": "1",
                "min": 1,
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "type": [
                    {
                        "code": "code"
                    }
                ]
            },
            {
                "path": "ValueSet.experimental",
                "max": "1",
                "min": 1,
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "ValueSet.publisher",
                "max": "1",
                "min": 1,
                "alias": [
                    "steward"
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.description",
                "max": "1",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "alias": [
                    "scope"
                ]
            },
            {
                "path": "ValueSet.immutable",
                "max": "1",
                "min": 0,
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "ValueSet.codeSystem",
                "max": "1",
                "min": 0
            },
            {
                "path": "ValueSet.codeSystem.system",
                "max": "1",
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "min": 1,
                "comments": "Servers that support  the shareable value set profile SHALL confirm that the system reference is resolvable when accepting value sets (e.g. PUT/POST)."
            },
            {
                "path": "ValueSet.codeSystem.version",
                "max": "1",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.codeSystem.caseSensitive",
                "max": "1",
                "min": 1,
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "ValueSet.codeSystem.concept",
                "max": "*",
                "name": "concept",
                "min": 1
            },
            {
                "path": "ValueSet.codeSystem.concept.code",
                "max": "1",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ]
            },
            {
                "path": "ValueSet.codeSystem.concept.abstract",
                "max": "1",
                "min": 0,
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "ValueSet.codeSystem.concept.display",
                "max": "1",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.codeSystem.concept.definition",
                "max": "1",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.codeSystem.concept.concept",
                "max": "*",
                "nameReference": "concept",
                "min": 0
            }
        ]
    },
    "snapshot": {
        "element": [
            {
                "path": "ValueSet",
                "max": "1",
                "definition": "A value set specifies a set of codes drawn from one or more code systems.",
                "min": 1,
                "type": [
                    {
                        "code": "ValueSet"
                    }
                ],
                "base": {
                    "path": "ValueSet",
                    "max": "*",
                    "min": 0
                },
                "constraint": [
                    {
                        "key": "vsd-7",
                        "severity": "error",
                        "xpath": "not(f:codeSystem/f:system/@value = f:url/@value)",
                        "human": "A defined code system (if present) SHALL have a different url than the value set url"
                    },
                    {
                        "key": "vsd-5",
                        "severity": "error",
                        "xpath": "exists(f:codeSystem) or exists(f:compose) or exists(f:expansion)",
                        "human": "Value set SHALL contain at least one of a codeSystem, a compose, or an expansion element"
                    },
                    {
                        "key": "vsd-2",
                        "severity": "error",
                        "xpath": "not(exists(f:compose)) or (count(f:compose/f:import)!=1 or exists(f:compose/f:include) or exists(f:compose/f:exclude) or exists(f:codeSystem))",
                        "human": "A value set with only one import SHALL also have an include and/or an exclude unless the value set includes and inline code system"
                    }
                ],
                "name": "ShareableValueSet",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    },
                    {
                        "identity": "w5",
                        "map": "conformance.terminology"
                    }
                ],
                "short": "A set of codes drawn from one or more code systems"
            },
            {
                "path": "ValueSet.id",
                "max": "1",
                "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "min": 0,
                "comments": "The only time that a resource does not have an id is when it is being submitted to the server using a create operation. Bundles always have an id, though it is usually a generated UUID.",
                "base": {
                    "path": "ValueSet.id",
                    "max": "1",
                    "min": 0
                },
                "short": "Logical id of this artifact",
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.meta",
                "max": "1",
                "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.",
                "min": 0,
                "type": [
                    {
                        "code": "Meta"
                    }
                ],
                "base": {
                    "path": "ValueSet.meta",
                    "max": "1",
                    "min": 0
                },
                "short": "Metadata about the resource",
                "isSummary": true
            },
            {
                "path": "ValueSet.implicitRules",
                "max": "1",
                "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.",
                "min": 0,
                "comments": "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element as much as possible.",
                "base": {
                    "path": "ValueSet.implicitRules",
                    "max": "1",
                    "min": 0
                },
                "short": "A set of rules under which this content was created",
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "isSummary": true,
                "isModifier": true
            },
            {
                "path": "ValueSet.language",
                "max": "1",
                "definition": "The base language in which the resource is written.",
                "min": 0,
                "comments": "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource  Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
                "base": {
                    "path": "ValueSet.language",
                    "max": "1",
                    "min": 0
                },
                "short": "Language of the resource content",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "valueSetUri": "http://tools.ietf.org/html/bcp47",
                    "description": "A human language."
                }
            },
            {
                "path": "ValueSet.text",
                "max": "1",
                "definition": "A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "min": 0,
                "condition": [
                    "dom-1"
                ],
                "comments": "Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative.",
                "base": {
                    "path": "ValueSet.text",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "Act.text?"
                    }
                ],
                "short": "Text summary of the resource, for human interpretation",
                "type": [
                    {
                        "code": "Narrative"
                    }
                ],
                "alias": [
                    "narrative",
                    "html",
                    "xhtml",
                    "display"
                ]
            },
            {
                "path": "ValueSet.contained",
                "max": "*",
                "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "min": 0,
                "comments": "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again.",
                "base": {
                    "path": "ValueSet.contained",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Contained, inline Resources",
                "type": [
                    {
                        "code": "Resource"
                    }
                ],
                "alias": [
                    "inline resources",
                    "anonymous resources",
                    "contained resources"
                ]
            },
            {
                "path": "ValueSet.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.url",
                "max": "1",
                "definition": "An absolute URL that is used to identify this value set when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this value set is (or will be) published.",
                "min": 1,
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "base": {
                    "path": "ValueSet.url",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    },
                    {
                        "identity": "w5",
                        "map": "id"
                    }
                ],
                "short": "Globally unique logical identifier for  value set",
                "isSummary": true
            },
            {
                "path": "ValueSet.identifier",
                "max": "1",
                "definition": "Formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance.",
                "min": 0,
                "comments": "Typically, this is used for values that can go in an HL7 v3 II data type.",
                "base": {
                    "path": "ValueSet.identifier",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "define.xml2.0",
                        "map": "Identifier part"
                    },
                    {
                        "identity": "w5",
                        "map": "id"
                    }
                ],
                "short": "Additional identifier for the value set (e.g. HL7 v2 / CDA)",
                "type": [
                    {
                        "code": "Identifier"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.version",
                "max": "1",
                "definition": "Used to identify this version of the value set when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the profile author manually and the value should be a timestamp.",
                "min": 1,
                "comments": "There may be multiple resource versions of the value set that have the same identifier.",
                "base": {
                    "path": "ValueSet.version",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    },
                    {
                        "identity": "w5",
                        "map": "id.version"
                    }
                ],
                "short": "Logical identifier for this version of the value set",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.name",
                "max": "1",
                "definition": "A free text natural language name describing the value set.",
                "min": 1,
                "requirements": "Support human navigation.",
                "base": {
                    "path": "ValueSet.name",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Informal name for this value set",
                "comments": "The name is not expected to be unique. A name should be provided unless the value set is a contained resource (e.g. an anonymous value set in a profile). Most registries will require a name.",
                "isSummary": true,
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.status",
                "min": 1,
                "comments": "Allows filtering of value set instances that are appropriate (or not) for use.",
                "short": "draft | active | retired",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "The lifecycle status of a Value Set or Concept Map.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/conformance-resource-status"
                    }
                },
                "isSummary": true,
                "max": "1",
                "definition": "The status of the value set.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    },
                    {
                        "identity": "w5",
                        "map": "status"
                    }
                ],
                "requirements": "Identify when/if the value set should be used.",
                "base": {
                    "path": "ValueSet.status",
                    "max": "1",
                    "min": 1
                },
                "isModifier": true
            },
            {
                "path": "ValueSet.experimental",
                "max": "1",
                "definition": "This valueset was authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.",
                "min": 1,
                "comments": "Allows filtering of value sets that are appropriate for use vs. not.",
                "base": {
                    "path": "ValueSet.experimental",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "class"
                    }
                ],
                "short": "If for testing purposes, not real usage",
                "type": [
                    {
                        "code": "boolean"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.publisher",
                "min": 1,
                "comments": "Usually an organization, but may be an individual. This item SHOULD be populated unless the information is available from context.",
                "short": "Name of the publisher (organization or individual)",
                "requirements": "Helps establish the \"authority/credibility\" of the value set.  May also allow for contact.",
                "alias": [
                    "steward"
                ],
                "isSummary": true,
                "max": "1",
                "definition": "The name of the individual or organization that published the value set.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "who.witness"
                    }
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "base": {
                    "path": "ValueSet.publisher",
                    "max": "1",
                    "min": 0
                }
            },
            {
                "path": "ValueSet.contact",
                "max": "*",
                "definition": "Contacts to assist a user in finding and communicating with the publisher.",
                "min": 0,
                "comments": "May be a web site, an email address, a telephone number, etc.",
                "base": {
                    "path": "ValueSet.contact",
                    "max": "*",
                    "min": 0
                },
                "short": "Contact details of the publisher",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.contact.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.contact.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.contact.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.contact.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.contact.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.contact.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.contact.name",
                "max": "1",
                "definition": "The name of an individual to contact regarding the value set.",
                "min": 0,
                "comments": "If there is no named individual, the telecom is for the organization as a whole.",
                "base": {
                    "path": "ValueSet.contact.name",
                    "max": "1",
                    "min": 0
                },
                "short": "Name of an individual to contact",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.contact.telecom",
                "max": "*",
                "definition": "Contact details for individual (if a name was provided) or the publisher.",
                "min": 0,
                "type": [
                    {
                        "code": "ContactPoint"
                    }
                ],
                "base": {
                    "path": "ValueSet.contact.telecom",
                    "max": "*",
                    "min": 0
                },
                "short": "Contact details for individual or publisher",
                "isSummary": true
            },
            {
                "path": "ValueSet.date",
                "max": "1",
                "definition": "The date that the value set status was last changed. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the implementation guide changes (e.g. the 'content logical definition').",
                "min": 0,
                "requirements": "Need to know when a value set was first legal for use or became withdrawn or replaced.",
                "base": {
                    "path": "ValueSet.date",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    },
                    {
                        "identity": "w5",
                        "map": "when.recorded"
                    }
                ],
                "short": "Date for given status",
                "comments": "Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the value set. Additional specific dates may be added as extensions.",
                "isSummary": true,
                "type": [
                    {
                        "code": "dateTime"
                    }
                ]
            },
            {
                "path": "ValueSet.lockedDate",
                "max": "1",
                "definition": "If a locked date is defined, then the Content Logical Definition must be evaluated using the current version of all referenced code system(s) and value set instances as of the locked date.",
                "min": 0,
                "comments": "With a defined lockedDate the value set is considered \"Locked\". Otherwise, the value set may have different expansions as underlying code systems and/or value sets evolve.  The interpretation of lockedDate is often dependent on the context - e.g. a SNOMED CT derived value set with a lockedDate will have a different expansion in USA than in UK.  If a value set specifies a version for include and exclude statements, and also specifies a locked date, the specified versions need to be available that date, or the value set will not be usable.",
                "base": {
                    "path": "ValueSet.lockedDate",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "when.init"
                    }
                ],
                "short": "Fixed date for all referenced code systems and value sets",
                "type": [
                    {
                        "code": "date"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.description",
                "min": 1,
                "comments": "The description is not intended to describe the semantics of the Value Set - there are no intrinsic semantics separate from the codes contained in its expansion. The description should capture its intended use, which is needed for ensuring integrity for its use in models across future changes. A description should be provided unless the value set is a contained resource (e.g. an anonymous value set in a profile). Most registries will require a description.",
                "short": "Human language description of the value set",
                "requirements": "Human understandability.",
                "alias": [
                    "Scope",
                    "Purpose",
                    "scope"
                ],
                "isSummary": true,
                "max": "1",
                "definition": "A free text natural language description of the use of the value set - reason for definition, \"the semantic space\" to be included in the value set, conditions of use, etc. The description may include a list of expected usages for the value set and can also describe the approach taken to build the value set.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "base": {
                    "path": "ValueSet.description",
                    "max": "1",
                    "min": 0
                }
            },
            {
                "path": "ValueSet.useContext",
                "max": "*",
                "definition": "The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching of value set definitions.",
                "min": 0,
                "requirements": "Assist in searching for appropriate content.",
                "base": {
                    "path": "ValueSet.useContext",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "define.xml2.0",
                        "map": "COMPONENT, PROPERTY, TIME_ASPCT, SYSTEM, SCALE_TYP, METHOD_TYP, CLASS, CLASSTYPE, ORDER_OBS, DOCUMENT_SECTION, HL7_ATTACHMENT_STRUCTURE"
                    }
                ],
                "short": "Content intends to support these contexts",
                "type": [
                    {
                        "code": "CodeableConcept"
                    }
                ],
                "isSummary": true,
                "binding": {
                    "strength": "extensible",
                    "description": "Indicates the countries, regions, disciplines and other aspects of use within which this artifact is targeted for use.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/use-context"
                    }
                }
            },
            {
                "path": "ValueSet.immutable",
                "max": "1",
                "definition": "If this is set to 'true', then no new versions of the content logical definition can be created.  Note: Other metadata might still change.",
                "min": 0,
                "comments": "Normally immutability is set to 'false', which is the default assumption if it is not populated.  Note that the implication is that if this is set to 'true', there may be only one ValueSet version for this definition. Immutability tends to be set to 'true' in one of two cases: - Where the value set, by the nature of its usage, cannot change.  For example \"All specializations of ACT in ActClassCode\" - Where there's no safe way to express the \"Purpose\" such that someone else could safely make changes to the value set definition. Source workflow control must guarantee that the same URI always yields the same definition.",
                "base": {
                    "path": "ValueSet.immutable",
                    "max": "1",
                    "min": 0
                },
                "short": "Indicates whether or not any change to the content logical definition may occur",
                "type": [
                    {
                        "code": "boolean"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.requirements",
                "max": "1",
                "definition": "Explains why this value set is needed and why it has been constrained as it has.",
                "min": 0,
                "comments": "This element does not describe the usage of the value set (that is done in comments), rather it's for traceability of ''why'' the element is either needed or ''why'' the constraints exist as they do.  This may be used to point to source materials or specifications that drove the structure of this data element.",
                "base": {
                    "path": "ValueSet.requirements",
                    "max": "1",
                    "min": 0
                },
                "short": "Why needed",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.copyright",
                "max": "1",
                "definition": "A copyright statement relating to the value set and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the value set.",
                "min": 0,
                "comments": "Frequently, the copyright differs between the value set and the codes that are included. The copyright statement should clearly differentiate between these when required.",
                "base": {
                    "path": "ValueSet.copyright",
                    "max": "1",
                    "min": 0
                },
                "short": "Use and/or publishing restrictions",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "alias": [
                    "License",
                    "Restrictions"
                ]
            },
            {
                "path": "ValueSet.extensible",
                "max": "1",
                "definition": "Whether this is intended to be used with an extensible binding or not.",
                "min": 0,
                "requirements": "It is not required to say whether this intent applies.",
                "base": {
                    "path": "ValueSet.extensible",
                    "max": "1",
                    "min": 0
                },
                "short": "Whether this is intended to be used with an extensible binding",
                "type": [
                    {
                        "code": "boolean"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.codeSystem",
                "max": "1",
                "definition": "A definition of a code system, inlined into the value set (as a packaging convenience). Note that the inline code system may be used from other value sets by referring to its (codeSystem.system) directly.",
                "min": 0,
                "condition": [
                    "vsd-5"
                ],
                "comments": "All code systems defined as part of a FHIR value set have an implicit valueset that includes all of the codes in the code system - the value set in which they are defined.",
                "base": {
                    "path": "ValueSet.codeSystem",
                    "max": "1",
                    "min": 0
                },
                "constraint": [
                    {
                        "key": "vsd-8",
                        "severity": "error",
                        "xpath": "count(descendant::f:concept)=count(distinct-values(descendant::f:concept/f:code/@value))",
                        "human": "Codes must be unique"
                    },
                    {
                        "key": "vsd-3",
                        "severity": "error",
                        "xpath": "count(distinct-values(descendant::f:concept/f:code/@value))=count(descendant::f:concept)",
                        "human": "Within a code system definition, all the codes SHALL be unique"
                    }
                ],
                "short": "An inline code system, which is part of this value set",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.codeSystem.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.codeSystem.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.codeSystem.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.codeSystem.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.codeSystem.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.codeSystem.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.codeSystem.system",
                "max": "1",
                "definition": "An absolute URI that is used to reference this code system, including in [Coding]{datatypes.html#Coding}.system.",
                "min": 1,
                "comments": "Servers that support  the shareable value set profile SHALL confirm that the system reference is resolvable when accepting value sets (e.g. PUT/POST).",
                "base": {
                    "path": "ValueSet.codeSystem.system",
                    "max": "1",
                    "min": 1
                },
                "short": "URI to identify the code system (e.g. in Coding.system)",
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.codeSystem.version",
                "max": "1",
                "definition": "The version of this code system that defines the codes. Note that the version is optional because a well maintained code system does not suffer from versioning, and therefore the version does not need to be maintained. However many code systems are not well maintained, and the version needs to be defined and tracked.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "base": {
                    "path": "ValueSet.codeSystem.version",
                    "max": "1",
                    "min": 0
                },
                "short": "Version (for use in Coding.version)",
                "isSummary": true
            },
            {
                "path": "ValueSet.codeSystem.caseSensitive",
                "max": "1",
                "definition": "If code comparison is case sensitive when codes within this system are compared to each other.",
                "min": 1,
                "comments": "If this value is missing, then it is not specified whether a code system is case sensitive or not. When the rule is not known, Postel's law should be followed: produce codes with the correct case, and accept codes in any case. This element is primarily provided to support validation software.",
                "base": {
                    "path": "ValueSet.codeSystem.caseSensitive",
                    "max": "1",
                    "min": 0
                },
                "short": "If code comparison is case sensitive",
                "type": [
                    {
                        "code": "boolean"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.codeSystem.concept",
                "max": "*",
                "definition": "Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meaning of the hierarchical relationships are.",
                "extension": [
                    {
                        "valueString": "ConceptDefinition",
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name"
                    }
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "base": {
                    "path": "ValueSet.codeSystem.concept",
                    "max": "*",
                    "min": 1
                },
                "min": 1,
                "name": "concept",
                "short": "Concepts in the code system"
            },
            {
                "path": "ValueSet.codeSystem.concept.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.codeSystem.concept.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.codeSystem.concept.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.codeSystem.concept.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.codeSystem.concept.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.codeSystem.concept.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.codeSystem.concept.code",
                "max": "1",
                "definition": "A code - a text symbol - that uniquely identifies the concept within the code system.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "base": {
                    "path": "ValueSet.codeSystem.concept.code",
                    "max": "1",
                    "min": 1
                },
                "short": "Code that identifies concept"
            },
            {
                "path": "ValueSet.codeSystem.concept.abstract",
                "max": "1",
                "defaultValueBoolean": false,
                "definition": "If this code is not for use as a real concept.",
                "min": 0,
                "type": [
                    {
                        "code": "boolean"
                    }
                ],
                "base": {
                    "path": "ValueSet.codeSystem.concept.abstract",
                    "max": "1",
                    "min": 0
                },
                "short": "If this code is not for use as a real concept"
            },
            {
                "path": "ValueSet.codeSystem.concept.display",
                "max": "1",
                "definition": "A human readable string that is the recommended default way to present this concept to a user.",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "base": {
                    "path": "ValueSet.codeSystem.concept.display",
                    "max": "1",
                    "min": 0
                },
                "short": "Text to display to the user"
            },
            {
                "path": "ValueSet.codeSystem.concept.definition",
                "max": "1",
                "definition": "The formal definition of the concept. The value set resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "base": {
                    "path": "ValueSet.codeSystem.concept.definition",
                    "max": "1",
                    "min": 0
                },
                "short": "Formal definition"
            },
            {
                "path": "ValueSet.codeSystem.concept.designation",
                "max": "*",
                "definition": "Additional representations for the concept - other languages, aliases, specialized purposes, used for particular purposes, etc.",
                "min": 0,
                "requirements": "Many concept definition systems support multiple representations, in multiple languages, and for multiple purposes.",
                "base": {
                    "path": "ValueSet.codeSystem.concept.designation",
                    "max": "*",
                    "min": 0
                },
                "name": "designation",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Additional representations for the concept"
            },
            {
                "path": "ValueSet.codeSystem.concept.designation.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.codeSystem.concept.designation.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.codeSystem.concept.designation.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.codeSystem.concept.designation.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.codeSystem.concept.designation.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.codeSystem.concept.designation.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.codeSystem.concept.designation.language",
                "max": "1",
                "definition": "The language this designation is defined for.",
                "min": 0,
                "comments": "In the absence of a language, the resource language applies.",
                "base": {
                    "path": "ValueSet.codeSystem.concept.designation.language",
                    "max": "1",
                    "min": 0
                },
                "short": "Human language of the designation",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "valueSetUri": "http://tools.ietf.org/html/bcp47",
                    "description": "A human language."
                }
            },
            {
                "path": "ValueSet.codeSystem.concept.designation.use",
                "max": "1",
                "definition": "A code that details how this designation would be used.",
                "min": 0,
                "comments": "If no use is provided, the designation can be assumed to be suitable for general display to a human user.",
                "base": {
                    "path": "ValueSet.codeSystem.concept.designation.use",
                    "max": "1",
                    "min": 0
                },
                "short": "Details how this designation would be used",
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "binding": {
                    "strength": "extensible",
                    "description": "Details of how a designation would be used.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/designation-use"
                    }
                }
            },
            {
                "path": "ValueSet.codeSystem.concept.designation.value",
                "max": "1",
                "definition": "The text value for this designation.",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "base": {
                    "path": "ValueSet.codeSystem.concept.designation.value",
                    "max": "1",
                    "min": 1
                },
                "short": "The text value for this designation"
            },
            {
                "path": "ValueSet.codeSystem.concept.concept",
                "max": "*",
                "definition": "Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) and can only be determined by examining the definitions of the concepts.",
                "min": 0,
                "base": {
                    "path": "ValueSet.codeSystem.concept.concept",
                    "max": "*",
                    "min": 0
                },
                "short": "Child Concepts (is-a/contains/categorizes)",
                "nameReference": "concept"
            },
            {
                "path": "ValueSet.compose",
                "max": "1",
                "definition": "A set of criteria that provide the content logical definition of the value set by including or excluding codes from outside this value set.",
                "min": 0,
                "condition": [
                    "vsd-5"
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "base": {
                    "path": "ValueSet.compose",
                    "max": "1",
                    "min": 0
                },
                "constraint": [
                    {
                        "key": "vsd-1",
                        "severity": "error",
                        "xpath": "exists(f:include) or exists(f:import)",
                        "human": "A value set composition SHALL have an include or an import"
                    }
                ],
                "short": "When value set includes codes from elsewhere"
            },
            {
                "path": "ValueSet.compose.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.compose.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.compose.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.compose.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.compose.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.compose.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.compose.import",
                "max": "*",
                "definition": "Includes the contents of the referenced value set as a part of the contents of this value set. This is an absolute URI that is a reference to ValueSet.uri.",
                "min": 0,
                "condition": [
                    "vsd-1"
                ],
                "comments": "The value set URI is either a logical reference to a defined value set such as a [SNOMED CT reference set]{snomedct.html#implicit}, or a direct reference to a value set definition using ValueSet.url. The reference may also not reference an actual FHIR ValueSet resource; in this case, whatever is referenced is an implicit definition of a value set that needs to be clear about how versions are resolved.",
                "base": {
                    "path": "ValueSet.compose.import",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Import the contents of another value set",
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.compose.include",
                "condition": [
                    "vsd-1"
                ],
                "extension": [
                    {
                        "valueString": "ConceptSet",
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name"
                    }
                ],
                "comments": "If there are no codes or filters, the entire code system is included. Note that the set of codes that are included may contain abstract codes.",
                "short": "Include one or more codes from a code system",
                "constraint": [
                    {
                        "key": "vsd-11",
                        "severity": "error",
                        "xpath": "not(exists(f:concept)) or not(exists(f:filter))",
                        "human": "Cannot have both concept and filter"
                    }
                ],
                "isSummary": true,
                "max": "*",
                "definition": "Include one or more codes from a code system.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "base": {
                    "path": "ValueSet.compose.include",
                    "max": "*",
                    "min": 0
                },
                "min": 0,
                "name": "include"
            },
            {
                "path": "ValueSet.compose.include.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.compose.include.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.compose.include.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.compose.include.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.compose.include.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.compose.include.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.compose.include.system",
                "max": "1",
                "definition": "An absolute URI which is the code system from which the selected codes come from.",
                "min": 1,
                "comments": "See ''Coding.system'' for further documentation.",
                "base": {
                    "path": "ValueSet.compose.include.system",
                    "max": "1",
                    "min": 1
                },
                "mapping": [
                    {
                        "identity": "define.xml2.0",
                        "map": "ODM/Study/MetaDataVersion/CodeList/ExternalCodeList/Href"
                    },
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "The system the codes come from",
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.compose.include.version",
                "max": "1",
                "definition": "The version of the code system that the codes are selected from.",
                "min": 0,
                "comments": "This is used when selecting the descendants of a concept - they may change between versions. If no version is specified, then the exact contents of the value set may not be known until a context of use binds it to a particular version.",
                "base": {
                    "path": "ValueSet.compose.include.version",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "define.xml2.0",
                        "map": "ODM/Study/MetaDataVersion/CodeList/ExternalCodeList/Version"
                    },
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Specific version of the code system referred to",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "ValueSet.compose.include.concept",
                "max": "*",
                "definition": "Specifies a concept to be included or excluded.",
                "extension": [
                    {
                        "valueString": "ConceptReference",
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name"
                    }
                ],
                "condition": [
                    "vsd-11"
                ],
                "comments": "The list of concepts is considered ordered, though the order may not have any particular significance. Typically, the order of an expansion follows that defined in the compose element.",
                "base": {
                    "path": "ValueSet.compose.include.concept",
                    "max": "*",
                    "min": 0
                },
                "min": 0,
                "short": "A concept defined in the system",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ]
            },
            {
                "path": "ValueSet.compose.include.concept.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.compose.include.concept.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.compose.include.concept.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.compose.include.concept.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.compose.include.concept.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.compose.include.concept.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.compose.include.concept.code",
                "max": "1",
                "definition": "Specifies a code for the concept to be included or excluded.",
                "min": 1,
                "comments": "Expressions are allowed if defined by the underlying code system.",
                "base": {
                    "path": "ValueSet.compose.include.concept.code",
                    "max": "1",
                    "min": 1
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Code or expression from system",
                "type": [
                    {
                        "code": "code"
                    }
                ]
            },
            {
                "path": "ValueSet.compose.include.concept.display",
                "max": "1",
                "definition": "The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system.",
                "min": 0,
                "comments": "The value set resource allows for an alternative display to be specified for when this concept is used in this particular value set. See notes in the value set narrative about the correct use of this element.",
                "base": {
                    "path": "ValueSet.compose.include.concept.display",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Test to display for this code for this value set",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.compose.include.concept.designation",
                "max": "*",
                "definition": "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc.",
                "min": 0,
                "base": {
                    "path": "ValueSet.compose.include.concept.designation",
                    "max": "*",
                    "min": 0
                },
                "short": "Additional representations for this valueset",
                "nameReference": "designation"
            },
            {
                "path": "ValueSet.compose.include.filter",
                "max": "*",
                "definition": "Select concepts by specify a matching criteria based on the properties (including relationships) defined by the system. If multiple filters are specified, they SHALL all be true.",
                "min": 0,
                "condition": [
                    "vsd-11"
                ],
                "comments": "Selecting codes by specifying filters based on properties is only possible where the underlying code system defines appropriate properties. Note that in some cases, the underlying code system defines the logical concepts but not the literal codes for the concepts. In such cases, the literal definitions may be provided by a third party.",
                "base": {
                    "path": "ValueSet.compose.include.filter",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Select codes/concepts by their properties (including relationships)",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ]
            },
            {
                "path": "ValueSet.compose.include.filter.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.compose.include.filter.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.compose.include.filter.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.compose.include.filter.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.compose.include.filter.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.compose.include.filter.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.compose.include.filter.property",
                "max": "1",
                "definition": "A code that identifies a property defined in the code system.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "base": {
                    "path": "ValueSet.compose.include.filter.property",
                    "max": "1",
                    "min": 1
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "A property defined by the code system"
            },
            {
                "path": "ValueSet.compose.include.filter.op",
                "max": "1",
                "definition": "The kind of operation to perform as a part of the filter criteria.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "base": {
                    "path": "ValueSet.compose.include.filter.op",
                    "max": "1",
                    "min": 1
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "= | is-a | is-not-a | regex | in | not-in",
                "binding": {
                    "strength": "required",
                    "description": "The kind of operation to perform as a part of a property based filter.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/filter-operator"
                    }
                }
            },
            {
                "path": "ValueSet.compose.include.filter.value",
                "max": "1",
                "definition": "The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value.",
                "min": 1,
                "comments": "Use regex matching with care - full regex matching on every SNOMED CT term is prohibitive, for example.",
                "base": {
                    "path": "ValueSet.compose.include.filter.value",
                    "max": "1",
                    "min": 1
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Code from the system, or regex criteria",
                "type": [
                    {
                        "code": "code"
                    }
                ]
            },
            {
                "path": "ValueSet.compose.exclude",
                "max": "*",
                "definition": "Exclude one or more codes from the value set.",
                "min": 0,
                "condition": [
                    "vsd-2"
                ],
                "comments": "Usually this is used to selectively exclude codes that were included by subsumption in the inclusions. Any display names specified for the codes are ignored.",
                "base": {
                    "path": "ValueSet.compose.exclude",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Explicitly exclude codes",
                "nameReference": "include"
            },
            {
                "path": "ValueSet.expansion",
                "max": "1",
                "definition": "A value set can also be \"expanded\", where the value set is turned into a simple collection of enumerated codes. This element holds the expansion, if it has been performed.",
                "min": 0,
                "condition": [
                    "vsd-5"
                ],
                "comments": "Expansion is performed to produce a collection of codes that are ready to use for data entry or validation.",
                "base": {
                    "path": "ValueSet.expansion",
                    "max": "1",
                    "min": 0
                },
                "short": "Used when the value set is \"expanded\"",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ]
            },
            {
                "path": "ValueSet.expansion.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.expansion.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.expansion.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.expansion.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.expansion.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.expansion.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.expansion.identifier",
                "max": "1",
                "definition": "An identifier that uniquely identifies this expansion of the valueset. Systems may re-use the same identifier as long as the expansion and the definition remain the same, but are not required to do so.",
                "min": 1,
                "comments": "Typically, this uri is a UUID (e.g. urn:uuid:8230ff20-c97a-4167-a59d-dc2cb9df16dd).",
                "base": {
                    "path": "ValueSet.expansion.identifier",
                    "max": "1",
                    "min": 1
                },
                "short": "Uniquely identifies this expansion",
                "type": [
                    {
                        "code": "uri"
                    }
                ]
            },
            {
                "path": "ValueSet.expansion.timestamp",
                "max": "1",
                "definition": "The time at which the expansion was produced by the expanding system.",
                "min": 1,
                "comments": "This SHOULD be a fully populated instant, but in some circumstances, value sets are expanded by hand, and the expansion is published without that precision.",
                "base": {
                    "path": "ValueSet.expansion.timestamp",
                    "max": "1",
                    "min": 1
                },
                "short": "Time ValueSet expansion happened",
                "type": [
                    {
                        "code": "dateTime"
                    }
                ]
            },
            {
                "path": "ValueSet.expansion.total",
                "max": "1",
                "definition": "The total number of concepts in the expansion. If the number of concept nodes in this resource is less than the stated number, then the server can return more using the offset parameter.",
                "min": 0,
                "comments": "Paging only applies to flat expansions.",
                "base": {
                    "path": "ValueSet.expansion.total",
                    "max": "1",
                    "min": 0
                },
                "short": "Total number of codes in the expansion",
                "type": [
                    {
                        "code": "integer"
                    }
                ]
            },
            {
                "path": "ValueSet.expansion.offset",
                "max": "1",
                "definition": "If paging is being used, the offset at which this resource starts.  I.e. this resource is a partial view into the expansion. If paging is not being used, this element SHALL not be present.",
                "min": 0,
                "meaningWhenMissing": "Paging is not being used",
                "comments": "Paging only applies to flat expansions. If a filter is applied, the count is the number of concepts that matched the filter, not the number of concepts in an unfiltered view of the expansion.",
                "base": {
                    "path": "ValueSet.expansion.offset",
                    "max": "1",
                    "min": 0
                },
                "short": "Offset at which this resource starts",
                "type": [
                    {
                        "code": "integer"
                    }
                ]
            },
            {
                "path": "ValueSet.expansion.parameter",
                "max": "*",
                "definition": "A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion.",
                "min": 0,
                "comments": "The server decides which parameters to include here, but at a minimum, the list SHOULD include the date, filter, and profile parameters passed to the $expand operation (if any).",
                "base": {
                    "path": "ValueSet.expansion.parameter",
                    "max": "*",
                    "min": 0
                },
                "short": "Parameter that controlled the expansion process",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ]
            },
            {
                "path": "ValueSet.expansion.parameter.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.expansion.parameter.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.expansion.parameter.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.expansion.parameter.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.expansion.parameter.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.expansion.parameter.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.expansion.parameter.name",
                "max": "1",
                "definition": "The name of the parameter.",
                "min": 1,
                "comments": "The names are assigned at the discretion of the server.",
                "base": {
                    "path": "ValueSet.expansion.parameter.name",
                    "max": "1",
                    "min": 1
                },
                "short": "Name as assigned by the server",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.expansion.parameter.value[x]",
                "max": "1",
                "definition": "The value of the parameter.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    },
                    {
                        "code": "boolean"
                    },
                    {
                        "code": "integer"
                    },
                    {
                        "code": "decimal"
                    },
                    {
                        "code": "uri"
                    },
                    {
                        "code": "code"
                    }
                ],
                "base": {
                    "path": "ValueSet.expansion.parameter.value[x]",
                    "max": "1",
                    "min": 0
                },
                "short": "Value of the named parameter"
            },
            {
                "path": "ValueSet.expansion.contains",
                "max": "*",
                "definition": "The codes that are contained in the value set expansion.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "base": {
                    "path": "ValueSet.expansion.contains",
                    "max": "*",
                    "min": 0
                },
                "constraint": [
                    {
                        "key": "vsd-9",
                        "severity": "error",
                        "xpath": "exists(f:code) or (f:abstract/@value = true())",
                        "human": "Must have a code if not abstract"
                    },
                    {
                        "key": "vsd-6",
                        "severity": "error",
                        "xpath": "exists(f:code) or exists(f:display)",
                        "human": "SHALL have a code or a display"
                    },
                    {
                        "key": "vsd-10",
                        "severity": "error",
                        "xpath": "exists(f:system) or not(exists(f:code))",
                        "human": "Must have a system if a code is present"
                    }
                ],
                "name": "contains",
                "short": "Codes in the value set"
            },
            {
                "path": "ValueSet.expansion.contains.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "base": {
                    "path": "ValueSet.expansion.contains.id",
                    "max": "1",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "ValueSet.expansion.contains.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.expansion.contains.extension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "ValueSet.expansion.contains.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "base": {
                    "path": "ValueSet.expansion.contains.modifierExtension",
                    "max": "*",
                    "min": 0
                },
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "ValueSet.expansion.contains.system",
                "max": "1",
                "definition": "An absolute URI which is the code system in which the code for this item in the expansion is defined.",
                "min": 0,
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "base": {
                    "path": "ValueSet.expansion.contains.system",
                    "max": "1",
                    "min": 0
                },
                "short": "System value for the code"
            },
            {
                "path": "ValueSet.expansion.contains.abstract",
                "max": "1",
                "definition": "If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value.",
                "min": 0,
                "comments": "This should not be understood to exclude its use for searching (e.g. by subsumption testing). The client should know whether it is appropriate for the user to select an abstract code or not.",
                "base": {
                    "path": "ValueSet.expansion.contains.abstract",
                    "max": "1",
                    "min": 0
                },
                "short": "If user cannot select this entry",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "ValueSet.expansion.contains.version",
                "max": "1",
                "definition": "The version of this code system that defined this code and/or display. This should only be used with code systems that do not enforce concept permanence.",
                "min": 0,
                "comments": "The exact value of the version string is specified by the system from which the code is derived.",
                "base": {
                    "path": "ValueSet.expansion.contains.version",
                    "max": "1",
                    "min": 0
                },
                "short": "Version in which this code/display is defined",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "ValueSet.expansion.contains.code",
                "max": "1",
                "definition": "The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set.",
                "min": 0,
                "condition": [
                    "vsd-6"
                ],
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "base": {
                    "path": "ValueSet.expansion.contains.code",
                    "max": "1",
                    "min": 0
                },
                "short": "Code - if blank, this is not a selectable code"
            },
            {
                "path": "ValueSet.expansion.contains.display",
                "max": "1",
                "definition": "The recommended display for this item in the expansion.",
                "min": 0,
                "condition": [
                    "vsd-6"
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "base": {
                    "path": "ValueSet.expansion.contains.display",
                    "max": "1",
                    "min": 0
                },
                "short": "User display for the concept"
            },
            {
                "path": "ValueSet.expansion.contains.contains",
                "max": "*",
                "definition": "Other codes and entries contained under this entry in the hierarchy.",
                "min": 0,
                "comments": "If the expansion uses this element, there is  no implication about the logical relationship between them, and the  structure cannot be used for logical inferencing. The structure  exists to provide navigational assistance for helping human users to  locate codes in the expansion.",
                "base": {
                    "path": "ValueSet.expansion.contains.contains",
                    "max": "*",
                    "min": 0
                },
                "short": "Codes contained under this entry",
                "nameReference": "contains"
            }
        ]
    },
    "publisher": "HL7",
    "abstract": false,
    "constrainedType": "ValueSet",
    "resourceType": "StructureDefinition",
    "description": "Enforces the minimum information set for the value set metadata required by HL7 and other organisations that share and publish value sets",
    "url": "http://hl7.org/fhir/StructureDefinition/shareablevalueset",
    "kind": "resource",
    "mapping": [
        {
            "identity": "rim",
            "name": "RIM",
            "uri": "http://hl7.org/v3"
        }
    ],
    "status": "draft",
    "base": "http://hl7.org/fhir/StructureDefinition/ValueSet",
    "name": "Shareable ValueSet",
    "id": "shareablevalueset",
    "fhirVersion": "1.0.2",
    "date": "2015-10-24T07:41:03+11:00"
}