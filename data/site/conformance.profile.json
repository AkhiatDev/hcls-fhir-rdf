{
    "snapshot": {
        "element": [
            {
                "path": "Conformance",
                "max": "1",
                "definition": "A conformance statement is a set of capabilities of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                "min": 1,
                "type": [
                    {
                        "code": "DomainResource"
                    }
                ],
                "constraint": [
                    {
                        "key": "cnf-14",
                        "severity": "error",
                        "xpath": "not(exists(f:software) or exists(f:implementation)) or (f:kind/@value != 'requirements')",
                        "human": "Conformance statements of kind 'requirements' do not have software or implementation elements"
                    },
                    {
                        "key": "cnf-1",
                        "severity": "error",
                        "xpath": "exists(f:rest) or exists(f:messaging) or exists(f:document)",
                        "human": "A Conformance statement SHALL have at least one of REST, messaging or document"
                    },
                    {
                        "key": "cnf-15",
                        "severity": "error",
                        "xpath": "not(exists(f:implementation)) or (f:kind/@value != 'capability')",
                        "human": "Conformance statements of kind 'software' do not have implementation elements"
                    },
                    {
                        "key": "cnf-2",
                        "severity": "error",
                        "xpath": "count(f:software | f:implementation | f:description) > 0",
                        "human": "A Conformance statement SHALL have at least one of description, software, or implementation"
                    },
                    {
                        "key": "cnf-3",
                        "severity": "error",
                        "xpath": "not(exists(f:messaging/f:endpoint)) or f:kind/@value = 'instance'",
                        "human": "Messaging end-point is required (and is only permitted) when statement is for an implementation"
                    },
                    {
                        "key": "cnf-7",
                        "severity": "error",
                        "xpath": "count(f:document[f:mode/@value='producer'])=count(distinct-values(f:document[f:mode/@value='producer']/f:profile/f:reference/@value)) and count(f:document[f:mode/@value='consumer'])=count(distinct-values(f:document[f:mode/@value='consumer']/f:profile/f:reference/@value))",
                        "human": "The set of documents must be unique by the combination of profile & mode"
                    },
                    {
                        "key": "cnf-8",
                        "severity": "error",
                        "xpath": "count(f:rest)=count(distinct-values(f:rest/f:mode/@value))",
                        "human": "There can only be one REST declaration per mode"
                    }
                ],
                "short": "A conformance statement",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "conformance.behavior"
                    }
                ]
            },
            {
                "path": "Conformance.id",
                "max": "1",
                "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "min": 0,
                "comments": "The only time that a resource does not have an id is when it is being submitted to the server using a create operation. Bundles always have an id, though it is usually a generated UUID.",
                "short": "Logical id of this artifact",
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.meta",
                "max": "1",
                "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.",
                "min": 0,
                "type": [
                    {
                        "code": "Meta"
                    }
                ],
                "short": "Metadata about the resource",
                "isSummary": true
            },
            {
                "path": "Conformance.implicitRules",
                "max": "1",
                "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.",
                "min": 0,
                "comments": "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element as much as possible.",
                "short": "A set of rules under which this content was created",
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "isSummary": true,
                "isModifier": true
            },
            {
                "path": "Conformance.language",
                "max": "1",
                "definition": "The base language in which the resource is written.",
                "min": 0,
                "comments": "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource  Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
                "short": "Language of the resource content",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "valueSetUri": "http://tools.ietf.org/html/bcp47",
                    "description": "A human language."
                }
            },
            {
                "path": "Conformance.text",
                "max": "1",
                "definition": "A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "min": 0,
                "condition": [
                    "dom-1"
                ],
                "comments": "Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "Act.text?"
                    }
                ],
                "short": "Text summary of the resource, for human interpretation",
                "type": [
                    {
                        "code": "Narrative"
                    }
                ],
                "alias": [
                    "narrative",
                    "html",
                    "xhtml",
                    "display"
                ]
            },
            {
                "path": "Conformance.contained",
                "max": "*",
                "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "min": 0,
                "comments": "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Contained, inline Resources",
                "type": [
                    {
                        "code": "Resource"
                    }
                ],
                "alias": [
                    "inline resources",
                    "anonymous resources",
                    "contained resources"
                ]
            },
            {
                "path": "Conformance.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.url",
                "max": "1",
                "definition": "An absolute URL that is used to identify this conformance statement when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this conformance statement is (or will be) published.",
                "min": 0,
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "id"
                    }
                ],
                "short": "Logical uri to reference this statement",
                "isSummary": true
            },
            {
                "path": "Conformance.version",
                "max": "1",
                "definition": "The identifier that is used to identify this version of the conformance statement when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the profile author manually and the value should be a timestamp.",
                "min": 0,
                "comments": "There may be multiple different instances of a conformance statement that have the same identifier but different versions.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "id.version"
                    }
                ],
                "short": "Logical id for this version of the statement",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.name",
                "max": "1",
                "definition": "A free text natural language name identifying the conformance statement.",
                "min": 0,
                "comments": "The name is not expected to be globally unique.",
                "short": "Informal name for this conformance statement",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.status",
                "max": "1",
                "definition": "The status of this conformance statement.",
                "min": 0,
                "comments": "This is not intended for use with actual conformance statements, but where conformance statements are used to describe possible or desired systems.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "status"
                    }
                ],
                "short": "draft | active | retired",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "description": "The lifecycle status of a Value Set or Concept Map.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/conformance-resource-status"
                    }
                },
                "isModifier": true
            },
            {
                "path": "Conformance.experimental",
                "max": "1",
                "definition": "A flag to indicate that this conformance statement is authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.",
                "min": 0,
                "comments": "Allows filtering of conformance statements that are appropriate for use vs. not.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "class"
                    }
                ],
                "short": "If for testing purposes, not real usage",
                "type": [
                    {
                        "code": "boolean"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.publisher",
                "max": "1",
                "definition": "The name of the individual or organization that published the conformance.",
                "min": 0,
                "requirements": "Helps establish the \"authority/credibility\" of the conformance.  May also allow for contact.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "who.witness"
                    }
                ],
                "short": "Name of the publisher (Organization or individual)",
                "comments": "Usually an organization, but may be an individual. This item SHOULD be populated unless the information is available from context.",
                "isSummary": true,
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.contact",
                "max": "*",
                "definition": "Contacts to assist a user in finding and communicating with the publisher.",
                "min": 0,
                "comments": "May be a web site, an email address, a telephone number (tel:), etc.",
                "short": "Contact details of the publisher",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.contact.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.contact.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.contact.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.contact.name",
                "max": "1",
                "definition": "The name of an individual to contact regarding the conformance.",
                "min": 0,
                "comments": "If there is no named individual, the telecom is for the organization as a whole.",
                "short": "Name of a individual to contact",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.contact.telecom",
                "max": "*",
                "definition": "Contact details for individual (if a name was provided) or the publisher.",
                "min": 0,
                "type": [
                    {
                        "code": "ContactPoint"
                    }
                ],
                "short": "Contact details for individual or publisher",
                "isSummary": true
            },
            {
                "path": "Conformance.date",
                "max": "1",
                "definition": "The date  (and optionally time) when the conformance statement was published. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the conformance statement changes.",
                "min": 1,
                "comments": "Additional specific dates may be added as extensions.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "when.recorded"
                    }
                ],
                "short": "Publication Date(/time)",
                "type": [
                    {
                        "code": "dateTime"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.description",
                "max": "1",
                "definition": "A free text natural language description of the conformance statement and its use. Typically, this is used when the conformance statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.",
                "min": 0,
                "condition": [
                    "cnf-2"
                ],
                "comments": "This field may include the purpose of this conformance statement, comments about its context etc. This does not need to be populated if the description is adequately implied by the software or implementation details.",
                "short": "Human description of the conformance statement",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.requirements",
                "max": "1",
                "definition": "Explains why this conformance statement is needed and why it's been constrained as it has.",
                "min": 0,
                "comments": "This element does not describe the usage of the conformance statement (that's done in comments), rather it's for traceability of *why* the element is either needed or why the constraints exist as they do.  This may be used to point to source materials or specifications that drove the structure of this data element.",
                "short": "Why is this needed?",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.copyright",
                "max": "1",
                "definition": "A copyright statement relating to the conformance statement and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the details of the system described by the conformance statement.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Use and/or publishing restrictions",
                "alias": [
                    "License",
                    "Restrictions"
                ]
            },
            {
                "path": "Conformance.kind",
                "max": "1",
                "definition": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind not instance of software) or a class of implementation (e.g. a desired purchase).",
                "min": 1,
                "requirements": "Allow searching the 3 modes.",
                "short": "instance | capability | requirements",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "description": "How a conformance statement is intended to be used.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/conformance-statement-kind"
                    }
                }
            },
            {
                "path": "Conformance.software",
                "max": "1",
                "definition": "Software that is covered by this conformance statement.  It is used when the conformance statement describes the capabilities of a particular software version, independent of an installation.",
                "min": 0,
                "condition": [
                    "cnf-2"
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Software that is covered by this conformance statement",
                "isSummary": true
            },
            {
                "path": "Conformance.software.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.software.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.software.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.software.name",
                "max": "1",
                "definition": "Name software is known by.",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "A name the software is known by",
                "isSummary": true
            },
            {
                "path": "Conformance.software.version",
                "max": "1",
                "definition": "The version identifier for the software covered by this statement.",
                "min": 0,
                "comments": "If possible, version should be specified, as statements are likely to be different for different versions of software.",
                "short": "Version covered by this statement",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.software.releaseDate",
                "max": "1",
                "definition": "Date this version of the software released.",
                "min": 0,
                "type": [
                    {
                        "code": "dateTime"
                    }
                ],
                "short": "Date this version released",
                "isSummary": true
            },
            {
                "path": "Conformance.implementation",
                "max": "1",
                "definition": "Identifies a specific implementation instance that is described by the conformance statement - i.e. a particular installation, rather than the capabilities of a software program.",
                "min": 0,
                "condition": [
                    "cnf-2"
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "If this describes a specific instance",
                "isSummary": true
            },
            {
                "path": "Conformance.implementation.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.implementation.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.implementation.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.implementation.description",
                "max": "1",
                "definition": "Information about the specific installation that this conformance statement relates to.",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Describes this specific instance",
                "isSummary": true
            },
            {
                "path": "Conformance.implementation.url",
                "max": "1",
                "definition": "An absolute base URL for the implementation.  This forms the base for REST interfaces as well as the mailbox and document interfaces.",
                "min": 0,
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "short": "Base URL for the installation",
                "isSummary": true
            },
            {
                "path": "Conformance.fhirVersion",
                "max": "1",
                "definition": "The version of the FHIR specification on which this conformance statement is based.",
                "min": 1,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "short": "FHIR Version the system uses",
                "isSummary": true
            },
            {
                "path": "Conformance.acceptUnknown",
                "max": "1",
                "definition": "A code that indicates whether the application accepts unknown elements or extensions when reading resources.",
                "min": 1,
                "comments": "Unknown elements in a resource can only arise as later versions of the specification are published, because this is the only place where such elements can be defined. Hence accepting unknown elements is about inter-version compatibility.\n\nApplications are recommended to accept unknown extensions and elements ('both'), but this is not always possible.",
                "short": "no | extensions | elements | both",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "description": "A code that indicates whether an application accepts unknown elements or extensions when reading resources.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/unknown-content-code"
                    }
                }
            },
            {
                "path": "Conformance.format",
                "max": "*",
                "definition": "A list of the formats supported by this implementation using their content types.",
                "min": 1,
                "comments": "\"xml\" or \"json\" are allowed, which describe the simple encodings described in the specification (and imply appropriate bundle support). Otherwise, mime types are legal here.",
                "short": "formats supported (xml | json | mime type)",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt",
                    "description": "The mime type of an attachment. Any valid mime type is allowed."
                }
            },
            {
                "path": "Conformance.profile",
                "max": "*",
                "definition": "A list of profiles that represent different use cases supported by the system. For a server, \"supported by the system\" means the system hosts/produces a set of resources that are conformant to a particular profile, and allows clients that use its services to search using this profile and to find appropriate data. For a client, it means the system will search by this profile and process data according to the guidance implicit in the profile. See further discussion in [Using Profiles]{profiling.html#profile-uses}.",
                "min": 0,
                "comments": "Supported profiles are different to the profiles that apply to a particular resource in rest.resource.profile. The resource profile is a general statement of what features of the resource are supported overall by the system - the sum total of the facilities it supports. A supported profile is a deeper statement about the functionality of the data and services provided by the server (or used by the client). A typical case is a laboratory system that produces a set of different reports - this is the list of types of data that it publishes. A key aspect of declaring profiles here is the question of how the client converts knowledge that the server publishes this data into working with the data; the client can inspect individual resources to determine whether they conform to a particular profile, but how does it find the ones that does? It does so by searching using the _profile parameter, so any resources listed here must be valid values for the _profile resource (using the identifier in the target profile).  Typical supported profiles cross resource types to describe a network of related resources, so they are listed here rather than by resource. However, they do not need to describe more than one resource.",
                "short": "Profiles for use cases supported",
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                        ]
                    }
                ]
            },
            {
                "path": "Conformance.rest",
                "max": "*",
                "definition": "A definition of the restful capabilities of the solution, if any.",
                "min": 0,
                "condition": [
                    "cnf-1"
                ],
                "comments": "Multiple repetitions allow definition of both client and / or server behaviors or possibly behaviors under different configuration settings (for software or requirements statements).",
                "constraint": [
                    {
                        "key": "cnf-9",
                        "severity": "error",
                        "xpath": "count(f:resource)=count(distinct-values(f:resource/f:type/@value))",
                        "human": "A given resource can only be described once per RESTful mode"
                    }
                ],
                "short": "If the endpoint is a RESTful one",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.rest.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.rest.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.rest.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.rest.mode",
                "max": "1",
                "definition": "Identifies whether this portion of the statement is describing ability to initiate or receive restful operations.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "client | server",
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "description": "The mode of a RESTful conformance statement.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/restful-conformance-mode"
                    }
                }
            },
            {
                "path": "Conformance.rest.documentation",
                "max": "1",
                "definition": "Information about the system's restful capabilities that apply across all applications, such as security.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "General description of implementation"
            },
            {
                "path": "Conformance.rest.security",
                "max": "1",
                "definition": "Information about security implementation from an interface perspective - what a client needs to know.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Information about security of implementation"
            },
            {
                "path": "Conformance.rest.security.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.rest.security.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.rest.security.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.rest.security.cors",
                "max": "1",
                "definition": "Server adds CORS headers when responding to requests - this enables javascript applications to use the server.",
                "min": 0,
                "comments": "The easiest CORS headers to add are Access-Control-Allow-Origin: * & Access-Control-Request-Method: GET, POST, PUT, DELETE. All servers SHOULD support CORS.",
                "short": "Adds CORS Headers (http://enable-cors.org/)",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "Conformance.rest.security.service",
                "max": "*",
                "definition": "Types of security services are supported/required by the system.",
                "min": 0,
                "type": [
                    {
                        "code": "CodeableConcept"
                    }
                ],
                "short": "OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates",
                "binding": {
                    "strength": "extensible",
                    "description": "Types of security services used with FHIR.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/restful-security-service"
                    }
                }
            },
            {
                "path": "Conformance.rest.security.description",
                "max": "1",
                "definition": "General description of how security works.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "General description of how security works"
            },
            {
                "path": "Conformance.rest.security.certificate",
                "max": "*",
                "definition": "Certificates associated with security profiles.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Certificates associated with security profiles"
            },
            {
                "path": "Conformance.rest.security.certificate.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.rest.security.certificate.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.rest.security.certificate.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.rest.security.certificate.type",
                "max": "1",
                "definition": "Mime type for certificate.",
                "min": 0,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "Mime type for certificate",
                "binding": {
                    "strength": "required",
                    "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt",
                    "description": "The mime type of an attachment. Any valid mime type is allowed."
                }
            },
            {
                "path": "Conformance.rest.security.certificate.blob",
                "max": "1",
                "definition": "Actual certificate.",
                "min": 0,
                "type": [
                    {
                        "code": "base64Binary"
                    }
                ],
                "short": "Actual certificate"
            },
            {
                "path": "Conformance.rest.resource",
                "max": "*",
                "definition": "A specification of the restful capabilities of the solution for a specific resource type.",
                "min": 1,
                "comments": "Max of one repetition per resource type.",
                "constraint": [
                    {
                        "key": "cnf-12",
                        "severity": "error",
                        "xpath": "count(f:searchParam)=count(distinct-values(f:searchParam/f:name/@value))",
                        "human": "Search parameter names must be unique in the context of a resource"
                    }
                ],
                "short": "Resource served on the REST interface",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.rest.resource.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.rest.resource.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.rest.resource.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.rest.resource.type",
                "max": "1",
                "definition": "A type of resource exposed via the restful interface.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "A resource type that is supported",
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "description": "One of the resource types defined as part of FHIR.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/resource-types"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.profile",
                "max": "1",
                "definition": "A specification of the profile that describes the solution's overall support for the resource, including any constraints on cardinality, bindings, lengths or other limitations. See further discussion in [Using Profiles]{profiling.html#profile-uses}.",
                "min": 0,
                "comments": "The profile applies to all  resources of this type - i.e. it is the superset of what is supported by the system.",
                "short": "Base System profile for all uses of resource",
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                        ]
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.interaction",
                "max": "*",
                "definition": "Identifies a restful operation supported by the solution.",
                "min": 1,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "extension": [
                    {
                        "valueString": "ResourceInteraction",
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name"
                    }
                ],
                "short": "What operations are supported?"
            },
            {
                "path": "Conformance.rest.resource.interaction.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.rest.resource.interaction.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.rest.resource.interaction.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.rest.resource.interaction.code",
                "max": "1",
                "definition": "Coded identifier of the operation, supported by the system resource.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "read | vread | update | delete | history-instance | validate | history-type | create | search-type",
                "binding": {
                    "strength": "required",
                    "description": "Operations supported by REST at the type or instance level.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/type-restful-interaction"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.interaction.documentation",
                "max": "1",
                "definition": "Guidance specific to the implementation of this operation, such as 'delete is a logical delete' or 'updates are only allowed with version id' or 'creates permitted from pre-authorized certificates only'.",
                "min": 0,
                "requirements": "REST allows a degree of variability in the implementation of RESTful solutions that is useful for exchange partners to be aware of.",
                "short": "Anything special about operation behavior",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.versioning",
                "max": "1",
                "definition": "This field is set to no-version to specify that the system does not support (server) or use (client) versioning for this resource type. If this has some other value, the server must at least correctly track and populate the versionId meta-property on resources. If the value is 'versioned-update', then the server supports all the versioning features, including using e-tags for version integrity in the API.",
                "min": 0,
                "comments": "If a server supports versionIds correctly, it SHOULD support vread too, but is not required to do so.",
                "short": "no-version | versioned | versioned-update",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "How the system supports versioning for a resource.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/versioning-policy"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.readHistory",
                "max": "1",
                "definition": "A flag for whether the server is able to return past versions as part of the vRead operation.",
                "min": 0,
                "comments": "It is useful to support the vRead operation for current operations, even if past versions aren't available.",
                "short": "Whether vRead can return past versions",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.updateCreate",
                "max": "1",
                "definition": "A flag to indicate that the server allows or needs to allow the client to create new identities on the server (e.g. that is, the client PUTs to a location where there is no existing resource). Allowing this operation means that the server allows the client to create new identities on the server.",
                "min": 0,
                "comments": "Allowing the clients to create new identities on the server means that the system administrator needs to have confidence that the clients do not create clashing identities between them. Obviously, if there is only one client, this won't happen. While creating identities on the client means that the clients need to be managed, it's much more convenient for many scenarios if such management can be put in place.",
                "short": "If update can commit to a new identity",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.conditionalCreate",
                "max": "1",
                "definition": "A flag that indicates that the server supports conditional create.",
                "min": 0,
                "comments": "Conditional Create is mainly appropriate for interface engine scripts converting from other formats, such as v2.",
                "short": "If allows/uses conditional create",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.conditionalUpdate",
                "max": "1",
                "definition": "A flag that indicates that the server supports conditional update.",
                "min": 0,
                "comments": "Conditional Update is mainly appropriate for interface engine scripts converting from other formats, such as v2.",
                "short": "If allows/uses conditional update",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.conditionalDelete",
                "max": "1",
                "definition": "A code that indicates how the server supports conditional delete.",
                "min": 0,
                "comments": "Conditional Delete is mainly appropriate for interface engine scripts converting from other formats, such as v2.",
                "short": "not-supported | single | multiple - how conditional delete is supported",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "A code that indicates how the server supports conditional delete.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/conditional-delete-status"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.searchInclude",
                "max": "*",
                "definition": "A list of _include values supported by the server.",
                "min": 0,
                "comments": "If this list is empty, the server does not support includes.",
                "short": "_include values supported by the server",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.searchRevInclude",
                "max": "*",
                "definition": "A list of _revinclude (reverse include) values supported by the server.",
                "min": 0,
                "comments": "If this list is empty, the server does not support includes.",
                "short": "_revinclude values supported by the server",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.searchParam",
                "max": "*",
                "definition": "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "constraint": [
                    {
                        "key": "cnf-13",
                        "severity": "error",
                        "xpath": "not(exists(f:chain)) or (f:type/@value = 'reference')",
                        "human": "Search parameters can only have chain names when the search parameter type is 'reference'"
                    }
                ],
                "name": "searchParam",
                "short": "Search params supported by implementation"
            },
            {
                "path": "Conformance.rest.resource.searchParam.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.rest.resource.searchParam.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.rest.resource.searchParam.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.rest.resource.searchParam.name",
                "max": "1",
                "definition": "The name of the search parameter used in the interface.",
                "min": 1,
                "comments": "Parameter names cannot overlap with standard parameter names, and standard parameters cannot be redefined.",
                "short": "Name of search parameter",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.searchParam.definition",
                "max": "1",
                "definition": "An absolute URI that is a formal reference to where this parameter was first defined, so that a client can be confident of the meaning of the search parameter (a reference to [[[SearchParameter.url]]]).",
                "min": 0,
                "comments": "This SHOULD be present, and matches SearchParameter.url.",
                "short": "Source of definition for parameter",
                "type": [
                    {
                        "code": "uri"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.searchParam.type",
                "max": "1",
                "definition": "The type of value a search parameter refers to, and how the content is interpreted.",
                "min": 1,
                "comments": "While this can be looked up from the definition, it is included here as a convenience for systems that autogenerate a query interface based on the server conformance statement.  It SHALL be the same as the type in the search parameter definition.",
                "short": "number | date | string | token | reference | composite | quantity | uri",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "Data types allowed to be used for search parameters.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/search-param-type"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.searchParam.documentation",
                "max": "1",
                "definition": "This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Server-specific usage"
            },
            {
                "path": "Conformance.rest.resource.searchParam.target",
                "max": "*",
                "definition": "Types of resource (if a resource is referenced).",
                "min": 0,
                "comments": "This SHALL be the same as or a proper subset of the resources listed in the search parameter definition.",
                "short": "Types of resource (if a resource reference)",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "One of the resource types defined as part of FHIR.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/resource-types"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.searchParam.modifier",
                "max": "*",
                "definition": "A modifier supported for the search parameter.",
                "min": 0,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "missing | exact | contains | not | text | in | not-in | below | above | type",
                "binding": {
                    "strength": "required",
                    "description": "A supported modifier for a search parameter.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/search-modifier-code"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.searchParam.chain",
                "max": "*",
                "definition": "Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference, and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from Conformance.rest.resource.searchParam.name on the target resource type.",
                "min": 0,
                "comments": "Systems are not required to list all the chain names they support, but if they don't list them, clients may not know to use them.",
                "short": "Chained names supported",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.interaction",
                "max": "*",
                "definition": "A specification of restful operations supported by the system.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "extension": [
                    {
                        "valueString": "SystemInteraction",
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name"
                    }
                ],
                "short": "What operations are supported?"
            },
            {
                "path": "Conformance.rest.interaction.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.rest.interaction.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.rest.interaction.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.rest.interaction.code",
                "max": "1",
                "definition": "A coded identifier of the operation, supported by the system.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "transaction | search-system | history-system",
                "binding": {
                    "strength": "required",
                    "description": "Operations supported by REST at the system level.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/system-restful-interaction"
                    }
                }
            },
            {
                "path": "Conformance.rest.interaction.documentation",
                "max": "1",
                "definition": "Guidance specific to the implementation of this operation, such as limitations on the kind of transactions allowed, or information about system wide search is implemented.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Anything special about operation behavior"
            },
            {
                "path": "Conformance.rest.transactionMode",
                "max": "1",
                "defaultValueCode": "not-supported",
                "definition": "A code that indicates how transactions are supported.",
                "min": 0,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "not-supported | batch | transaction | both",
                "binding": {
                    "strength": "required",
                    "description": "A code that indicates how transactions are supported.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/transaction-mode"
                    }
                }
            },
            {
                "path": "Conformance.rest.searchParam",
                "max": "*",
                "definition": "Search parameters that are supported for searching all resources for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
                "min": 0,
                "comments": "Typically, the only search parameters supported for all parameters are search parameters that apply to all resources - tags, profiles, text search etc.",
                "short": "Search params for searching all resources",
                "nameReference": "searchParam"
            },
            {
                "path": "Conformance.rest.operation",
                "max": "*",
                "definition": "Definition of an operation or a named query and with its parameters and their meaning and type.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Definition of an operation or a custom query"
            },
            {
                "path": "Conformance.rest.operation.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.rest.operation.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.rest.operation.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.rest.operation.name",
                "max": "1",
                "definition": "The name of a query, which is used in the _query parameter when the query is called.",
                "min": 1,
                "comments": "The name here SHOULD be the same as the name in the definition, unless there is a name clash and the name cannot be used.",
                "short": "Name by which the operation/query is invoked",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.operation.definition",
                "max": "1",
                "definition": "Where the formal definition can be found.",
                "min": 1,
                "comments": "This can be used to build an HTML form to invoke the operation, for instance.",
                "short": "The defined operation/query",
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/OperationDefinition"
                        ]
                    }
                ]
            },
            {
                "path": "Conformance.rest.compartment",
                "max": "*",
                "definition": "An absolute URI which is a reference to the definition of a compartment hosted by the system.",
                "min": 0,
                "comments": "At present, the only defined compartments are at [[compartments.html]].",
                "short": "Compartments served/used by system",
                "type": [
                    {
                        "code": "uri"
                    }
                ]
            },
            {
                "path": "Conformance.messaging",
                "max": "*",
                "definition": "A description of the messaging capabilities of the solution.",
                "min": 0,
                "condition": [
                    "cnf-1"
                ],
                "comments": "Multiple repetitions allow the documentation of multiple endpoints per solution.",
                "short": "If messaging is supported",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ]
            },
            {
                "path": "Conformance.messaging.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.messaging.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.messaging.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.messaging.endpoint",
                "max": "*",
                "definition": "An endpoint (network accessible address) to which messages and/or replies are to be sent.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "A messaging service end-point",
                "alias": [
                    "3"
                ]
            },
            {
                "path": "Conformance.messaging.endpoint.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.messaging.endpoint.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.messaging.endpoint.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.messaging.endpoint.protocol",
                "max": "1",
                "definition": "A list of the messaging transport protocol(s) identifiers, supported by this endpoint.",
                "min": 1,
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "short": "http | ftp | mllp +",
                "binding": {
                    "strength": "extensible",
                    "description": "The protocol used for message transport.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/message-transport"
                    }
                }
            },
            {
                "path": "Conformance.messaging.endpoint.address",
                "max": "1",
                "definition": "The network address of the end-point. For solutions that do not use network addresses for routing, it can be just an identifier.",
                "min": 1,
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "short": "Address of end-point"
            },
            {
                "path": "Conformance.messaging.reliableCache",
                "max": "1",
                "definition": "Length if the receiver's reliable messaging cache in minutes (if a receiver) or how long the cache length on the receiver should be (if a sender).",
                "min": 0,
                "comments": "If this value is missing then the application does not implement (receiver) or depend on (sender) reliable messaging.",
                "short": "Reliable Message Cache Length (min)",
                "type": [
                    {
                        "code": "unsignedInt"
                    }
                ]
            },
            {
                "path": "Conformance.messaging.documentation",
                "max": "1",
                "definition": "Documentation about the system's messaging capabilities for this endpoint not otherwise documented by the conformance statement.  For example, process for becoming an authorized messaging exchange partner.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Messaging interface behavior details"
            },
            {
                "path": "Conformance.messaging.event",
                "max": "*",
                "definition": "A description of the solution's support for an event at this end-point.",
                "min": 1,
                "comments": "The same event may be listed up to two times - once as sender and once as receiver.",
                "short": "Declare support for this event",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ]
            },
            {
                "path": "Conformance.messaging.event.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.messaging.event.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.messaging.event.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.messaging.event.code",
                "max": "1",
                "definition": "A coded identifier of a supported messaging event.",
                "min": 1,
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "short": "Event type",
                "binding": {
                    "strength": "preferred",
                    "description": "One of the message events defined as part of FHIR.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/message-events"
                    }
                }
            },
            {
                "path": "Conformance.messaging.event.category",
                "max": "1",
                "definition": "The impact of the content of the message.",
                "min": 0,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "Consequence | Currency | Notification",
                "binding": {
                    "strength": "required",
                    "description": "The impact of the content of a message.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/message-significance-category"
                    }
                }
            },
            {
                "path": "Conformance.messaging.event.mode",
                "max": "1",
                "definition": "The mode of this event declaration - whether application is sender or receiver.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "sender | receiver",
                "binding": {
                    "strength": "required",
                    "description": "The mode of a message conformance statement.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/message-conformance-event-mode"
                    }
                }
            },
            {
                "path": "Conformance.messaging.event.focus",
                "max": "1",
                "definition": "A resource associated with the event.  This is the resource that defines the event.",
                "min": 1,
                "comments": "This SHALL be provided if the event type supports multiple different resource types.",
                "short": "Resource that's focus of message",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "One of the resource types defined as part of FHIR.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/resource-types"
                    }
                }
            },
            {
                "path": "Conformance.messaging.event.request",
                "max": "1",
                "definition": "Information about the request for this event.",
                "min": 1,
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                        ]
                    }
                ],
                "short": "Profile that describes the request"
            },
            {
                "path": "Conformance.messaging.event.response",
                "max": "1",
                "definition": "Information about the response for this event.",
                "min": 1,
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                        ]
                    }
                ],
                "short": "Profile that describes the response"
            },
            {
                "path": "Conformance.messaging.event.documentation",
                "max": "1",
                "definition": "Guidance on how this event is handled, such as internal system trigger points, business rules, etc.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Endpoint-specific event documentation"
            },
            {
                "path": "Conformance.document",
                "max": "*",
                "definition": "A document definition.",
                "min": 0,
                "condition": [
                    "cnf-1"
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Document definition"
            },
            {
                "path": "Conformance.document.id",
                "max": "1",
                "representation": [
                    "xmlAttr"
                ],
                "definition": "unique id for the element within a resource (for internal references).",
                "min": 0,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "xml:id (or equivalent in JSON)"
            },
            {
                "path": "Conformance.document.extension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "min": 0,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "n/a"
                    }
                ],
                "short": "Additional Content defined by implementations",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content"
                ]
            },
            {
                "path": "Conformance.document.modifierExtension",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "min": 0,
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "mapping": [
                    {
                        "identity": "rim",
                        "map": "N/A"
                    }
                ],
                "short": "Extensions that cannot be ignored",
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ]
            },
            {
                "path": "Conformance.document.mode",
                "max": "1",
                "definition": "Mode of this document declaration - whether application is producer or consumer.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "producer | consumer",
                "binding": {
                    "strength": "required",
                    "description": "Whether the application produces or consumes documents.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/document-mode"
                    }
                }
            },
            {
                "path": "Conformance.document.documentation",
                "max": "1",
                "definition": "A description of how the application supports or uses the specified document profile.  For example, when are documents created, what action is taken with consumed documents, etc.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Description of document support"
            },
            {
                "path": "Conformance.document.profile",
                "max": "1",
                "definition": "A constraint on a resource used in the document.",
                "min": 1,
                "comments": "The first resource is the document resource.",
                "short": "Constraint on a resource used in the document",
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                        ]
                    }
                ]
            }
        ]
    },
    "publisher": "Health Level Seven International (FHIR Infrastructure)",
    "abstract": false,
    "extension": [
        {
            "valueInteger": 2,
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm"
        }
    ],
    "differential": {
        "element": [
            {
                "path": "Conformance",
                "max": "1",
                "definition": "A conformance statement is a set of capabilities of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
                "min": 1,
                "type": [
                    {
                        "code": "DomainResource"
                    }
                ],
                "constraint": [
                    {
                        "key": "cnf-14",
                        "severity": "error",
                        "xpath": "not(exists(f:software) or exists(f:implementation)) or (f:kind/@value != 'requirements')",
                        "human": "Conformance statements of kind 'requirements' do not have software or implementation elements"
                    },
                    {
                        "key": "cnf-1",
                        "severity": "error",
                        "xpath": "exists(f:rest) or exists(f:messaging) or exists(f:document)",
                        "human": "A Conformance statement SHALL have at least one of REST, messaging or document"
                    },
                    {
                        "key": "cnf-15",
                        "severity": "error",
                        "xpath": "not(exists(f:implementation)) or (f:kind/@value != 'capability')",
                        "human": "Conformance statements of kind 'software' do not have implementation elements"
                    },
                    {
                        "key": "cnf-2",
                        "severity": "error",
                        "xpath": "count(f:software | f:implementation | f:description) > 0",
                        "human": "A Conformance statement SHALL have at least one of description, software, or implementation"
                    },
                    {
                        "key": "cnf-3",
                        "severity": "error",
                        "xpath": "not(exists(f:messaging/f:endpoint)) or f:kind/@value = 'instance'",
                        "human": "Messaging end-point is required (and is only permitted) when statement is for an implementation"
                    },
                    {
                        "key": "cnf-7",
                        "severity": "error",
                        "xpath": "count(f:document[f:mode/@value='producer'])=count(distinct-values(f:document[f:mode/@value='producer']/f:profile/f:reference/@value)) and count(f:document[f:mode/@value='consumer'])=count(distinct-values(f:document[f:mode/@value='consumer']/f:profile/f:reference/@value))",
                        "human": "The set of documents must be unique by the combination of profile & mode"
                    },
                    {
                        "key": "cnf-8",
                        "severity": "error",
                        "xpath": "count(f:rest)=count(distinct-values(f:rest/f:mode/@value))",
                        "human": "There can only be one REST declaration per mode"
                    }
                ],
                "short": "A conformance statement",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "conformance.behavior"
                    }
                ]
            },
            {
                "path": "Conformance.url",
                "max": "1",
                "definition": "An absolute URL that is used to identify this conformance statement when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this conformance statement is (or will be) published.",
                "min": 0,
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "id"
                    }
                ],
                "short": "Logical uri to reference this statement",
                "isSummary": true
            },
            {
                "path": "Conformance.version",
                "max": "1",
                "definition": "The identifier that is used to identify this version of the conformance statement when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the profile author manually and the value should be a timestamp.",
                "min": 0,
                "comments": "There may be multiple different instances of a conformance statement that have the same identifier but different versions.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "id.version"
                    }
                ],
                "short": "Logical id for this version of the statement",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.name",
                "max": "1",
                "definition": "A free text natural language name identifying the conformance statement.",
                "min": 0,
                "comments": "The name is not expected to be globally unique.",
                "short": "Informal name for this conformance statement",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.status",
                "max": "1",
                "definition": "The status of this conformance statement.",
                "min": 0,
                "comments": "This is not intended for use with actual conformance statements, but where conformance statements are used to describe possible or desired systems.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "status"
                    }
                ],
                "short": "draft | active | retired",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "description": "The lifecycle status of a Value Set or Concept Map.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/conformance-resource-status"
                    }
                },
                "isModifier": true
            },
            {
                "path": "Conformance.experimental",
                "max": "1",
                "definition": "A flag to indicate that this conformance statement is authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.",
                "min": 0,
                "comments": "Allows filtering of conformance statements that are appropriate for use vs. not.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "class"
                    }
                ],
                "short": "If for testing purposes, not real usage",
                "type": [
                    {
                        "code": "boolean"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.publisher",
                "max": "1",
                "definition": "The name of the individual or organization that published the conformance.",
                "min": 0,
                "requirements": "Helps establish the \"authority/credibility\" of the conformance.  May also allow for contact.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "who.witness"
                    }
                ],
                "short": "Name of the publisher (Organization or individual)",
                "comments": "Usually an organization, but may be an individual. This item SHOULD be populated unless the information is available from context.",
                "isSummary": true,
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.contact",
                "max": "*",
                "definition": "Contacts to assist a user in finding and communicating with the publisher.",
                "min": 0,
                "comments": "May be a web site, an email address, a telephone number (tel:), etc.",
                "short": "Contact details of the publisher",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.contact.name",
                "max": "1",
                "definition": "The name of an individual to contact regarding the conformance.",
                "min": 0,
                "comments": "If there is no named individual, the telecom is for the organization as a whole.",
                "short": "Name of a individual to contact",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.contact.telecom",
                "max": "*",
                "definition": "Contact details for individual (if a name was provided) or the publisher.",
                "min": 0,
                "type": [
                    {
                        "code": "ContactPoint"
                    }
                ],
                "short": "Contact details for individual or publisher",
                "isSummary": true
            },
            {
                "path": "Conformance.date",
                "max": "1",
                "definition": "The date  (and optionally time) when the conformance statement was published. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the conformance statement changes.",
                "min": 1,
                "comments": "Additional specific dates may be added as extensions.",
                "mapping": [
                    {
                        "identity": "w5",
                        "map": "when.recorded"
                    }
                ],
                "short": "Publication Date(/time)",
                "type": [
                    {
                        "code": "dateTime"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.description",
                "max": "1",
                "definition": "A free text natural language description of the conformance statement and its use. Typically, this is used when the conformance statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.",
                "min": 0,
                "condition": [
                    "cnf-2"
                ],
                "comments": "This field may include the purpose of this conformance statement, comments about its context etc. This does not need to be populated if the description is adequately implied by the software or implementation details.",
                "short": "Human description of the conformance statement",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.requirements",
                "max": "1",
                "definition": "Explains why this conformance statement is needed and why it's been constrained as it has.",
                "min": 0,
                "comments": "This element does not describe the usage of the conformance statement (that's done in comments), rather it's for traceability of *why* the element is either needed or why the constraints exist as they do.  This may be used to point to source materials or specifications that drove the structure of this data element.",
                "short": "Why is this needed?",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.copyright",
                "max": "1",
                "definition": "A copyright statement relating to the conformance statement and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the details of the system described by the conformance statement.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Use and/or publishing restrictions",
                "alias": [
                    "License",
                    "Restrictions"
                ]
            },
            {
                "path": "Conformance.kind",
                "max": "1",
                "definition": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind not instance of software) or a class of implementation (e.g. a desired purchase).",
                "min": 1,
                "requirements": "Allow searching the 3 modes.",
                "short": "instance | capability | requirements",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "description": "How a conformance statement is intended to be used.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/conformance-statement-kind"
                    }
                }
            },
            {
                "path": "Conformance.software",
                "max": "1",
                "definition": "Software that is covered by this conformance statement.  It is used when the conformance statement describes the capabilities of a particular software version, independent of an installation.",
                "min": 0,
                "condition": [
                    "cnf-2"
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Software that is covered by this conformance statement",
                "isSummary": true
            },
            {
                "path": "Conformance.software.name",
                "max": "1",
                "definition": "Name software is known by.",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "A name the software is known by",
                "isSummary": true
            },
            {
                "path": "Conformance.software.version",
                "max": "1",
                "definition": "The version identifier for the software covered by this statement.",
                "min": 0,
                "comments": "If possible, version should be specified, as statements are likely to be different for different versions of software.",
                "short": "Version covered by this statement",
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.software.releaseDate",
                "max": "1",
                "definition": "Date this version of the software released.",
                "min": 0,
                "type": [
                    {
                        "code": "dateTime"
                    }
                ],
                "short": "Date this version released",
                "isSummary": true
            },
            {
                "path": "Conformance.implementation",
                "max": "1",
                "definition": "Identifies a specific implementation instance that is described by the conformance statement - i.e. a particular installation, rather than the capabilities of a software program.",
                "min": 0,
                "condition": [
                    "cnf-2"
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "If this describes a specific instance",
                "isSummary": true
            },
            {
                "path": "Conformance.implementation.description",
                "max": "1",
                "definition": "Information about the specific installation that this conformance statement relates to.",
                "min": 1,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Describes this specific instance",
                "isSummary": true
            },
            {
                "path": "Conformance.implementation.url",
                "max": "1",
                "definition": "An absolute base URL for the implementation.  This forms the base for REST interfaces as well as the mailbox and document interfaces.",
                "min": 0,
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "short": "Base URL for the installation",
                "isSummary": true
            },
            {
                "path": "Conformance.fhirVersion",
                "max": "1",
                "definition": "The version of the FHIR specification on which this conformance statement is based.",
                "min": 1,
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "short": "FHIR Version the system uses",
                "isSummary": true
            },
            {
                "path": "Conformance.acceptUnknown",
                "max": "1",
                "definition": "A code that indicates whether the application accepts unknown elements or extensions when reading resources.",
                "min": 1,
                "comments": "Unknown elements in a resource can only arise as later versions of the specification are published, because this is the only place where such elements can be defined. Hence accepting unknown elements is about inter-version compatibility.\n\nApplications are recommended to accept unknown extensions and elements ('both'), but this is not always possible.",
                "short": "no | extensions | elements | both",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "description": "A code that indicates whether an application accepts unknown elements or extensions when reading resources.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/unknown-content-code"
                    }
                }
            },
            {
                "path": "Conformance.format",
                "max": "*",
                "definition": "A list of the formats supported by this implementation using their content types.",
                "min": 1,
                "comments": "\"xml\" or \"json\" are allowed, which describe the simple encodings described in the specification (and imply appropriate bundle support). Otherwise, mime types are legal here.",
                "short": "formats supported (xml | json | mime type)",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt",
                    "description": "The mime type of an attachment. Any valid mime type is allowed."
                }
            },
            {
                "path": "Conformance.profile",
                "max": "*",
                "definition": "A list of profiles that represent different use cases supported by the system. For a server, \"supported by the system\" means the system hosts/produces a set of resources that are conformant to a particular profile, and allows clients that use its services to search using this profile and to find appropriate data. For a client, it means the system will search by this profile and process data according to the guidance implicit in the profile. See further discussion in [Using Profiles]{profiling.html#profile-uses}.",
                "min": 0,
                "comments": "Supported profiles are different to the profiles that apply to a particular resource in rest.resource.profile. The resource profile is a general statement of what features of the resource are supported overall by the system - the sum total of the facilities it supports. A supported profile is a deeper statement about the functionality of the data and services provided by the server (or used by the client). A typical case is a laboratory system that produces a set of different reports - this is the list of types of data that it publishes. A key aspect of declaring profiles here is the question of how the client converts knowledge that the server publishes this data into working with the data; the client can inspect individual resources to determine whether they conform to a particular profile, but how does it find the ones that does? It does so by searching using the _profile parameter, so any resources listed here must be valid values for the _profile resource (using the identifier in the target profile).  Typical supported profiles cross resource types to describe a network of related resources, so they are listed here rather than by resource. However, they do not need to describe more than one resource.",
                "short": "Profiles for use cases supported",
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                        ]
                    }
                ]
            },
            {
                "path": "Conformance.rest",
                "max": "*",
                "definition": "A definition of the restful capabilities of the solution, if any.",
                "min": 0,
                "condition": [
                    "cnf-1"
                ],
                "comments": "Multiple repetitions allow definition of both client and / or server behaviors or possibly behaviors under different configuration settings (for software or requirements statements).",
                "constraint": [
                    {
                        "key": "cnf-9",
                        "severity": "error",
                        "xpath": "count(f:resource)=count(distinct-values(f:resource/f:type/@value))",
                        "human": "A given resource can only be described once per RESTful mode"
                    }
                ],
                "short": "If the endpoint is a RESTful one",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.rest.mode",
                "max": "1",
                "definition": "Identifies whether this portion of the statement is describing ability to initiate or receive restful operations.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "client | server",
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "description": "The mode of a RESTful conformance statement.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/restful-conformance-mode"
                    }
                }
            },
            {
                "path": "Conformance.rest.documentation",
                "max": "1",
                "definition": "Information about the system's restful capabilities that apply across all applications, such as security.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "General description of implementation"
            },
            {
                "path": "Conformance.rest.security",
                "max": "1",
                "definition": "Information about security implementation from an interface perspective - what a client needs to know.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Information about security of implementation"
            },
            {
                "path": "Conformance.rest.security.cors",
                "max": "1",
                "definition": "Server adds CORS headers when responding to requests - this enables javascript applications to use the server.",
                "min": 0,
                "comments": "The easiest CORS headers to add are Access-Control-Allow-Origin: * & Access-Control-Request-Method: GET, POST, PUT, DELETE. All servers SHOULD support CORS.",
                "short": "Adds CORS Headers (http://enable-cors.org/)",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "Conformance.rest.security.service",
                "max": "*",
                "definition": "Types of security services are supported/required by the system.",
                "min": 0,
                "type": [
                    {
                        "code": "CodeableConcept"
                    }
                ],
                "short": "OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates",
                "binding": {
                    "strength": "extensible",
                    "description": "Types of security services used with FHIR.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/restful-security-service"
                    }
                }
            },
            {
                "path": "Conformance.rest.security.description",
                "max": "1",
                "definition": "General description of how security works.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "General description of how security works"
            },
            {
                "path": "Conformance.rest.security.certificate",
                "max": "*",
                "definition": "Certificates associated with security profiles.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Certificates associated with security profiles"
            },
            {
                "path": "Conformance.rest.security.certificate.type",
                "max": "1",
                "definition": "Mime type for certificate.",
                "min": 0,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "Mime type for certificate",
                "binding": {
                    "strength": "required",
                    "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt",
                    "description": "The mime type of an attachment. Any valid mime type is allowed."
                }
            },
            {
                "path": "Conformance.rest.security.certificate.blob",
                "max": "1",
                "definition": "Actual certificate.",
                "min": 0,
                "type": [
                    {
                        "code": "base64Binary"
                    }
                ],
                "short": "Actual certificate"
            },
            {
                "path": "Conformance.rest.resource",
                "max": "*",
                "definition": "A specification of the restful capabilities of the solution for a specific resource type.",
                "min": 1,
                "comments": "Max of one repetition per resource type.",
                "constraint": [
                    {
                        "key": "cnf-12",
                        "severity": "error",
                        "xpath": "count(f:searchParam)=count(distinct-values(f:searchParam/f:name/@value))",
                        "human": "Search parameter names must be unique in the context of a resource"
                    }
                ],
                "short": "Resource served on the REST interface",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "isSummary": true
            },
            {
                "path": "Conformance.rest.resource.type",
                "max": "1",
                "definition": "A type of resource exposed via the restful interface.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "A resource type that is supported",
                "isSummary": true,
                "binding": {
                    "strength": "required",
                    "description": "One of the resource types defined as part of FHIR.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/resource-types"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.profile",
                "max": "1",
                "definition": "A specification of the profile that describes the solution's overall support for the resource, including any constraints on cardinality, bindings, lengths or other limitations. See further discussion in [Using Profiles]{profiling.html#profile-uses}.",
                "min": 0,
                "comments": "The profile applies to all  resources of this type - i.e. it is the superset of what is supported by the system.",
                "short": "Base System profile for all uses of resource",
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                        ]
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.interaction",
                "max": "*",
                "definition": "Identifies a restful operation supported by the solution.",
                "min": 1,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "extension": [
                    {
                        "valueString": "ResourceInteraction",
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name"
                    }
                ],
                "short": "What operations are supported?"
            },
            {
                "path": "Conformance.rest.resource.interaction.code",
                "max": "1",
                "definition": "Coded identifier of the operation, supported by the system resource.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "read | vread | update | delete | history-instance | validate | history-type | create | search-type",
                "binding": {
                    "strength": "required",
                    "description": "Operations supported by REST at the type or instance level.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/type-restful-interaction"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.interaction.documentation",
                "max": "1",
                "definition": "Guidance specific to the implementation of this operation, such as 'delete is a logical delete' or 'updates are only allowed with version id' or 'creates permitted from pre-authorized certificates only'.",
                "min": 0,
                "requirements": "REST allows a degree of variability in the implementation of RESTful solutions that is useful for exchange partners to be aware of.",
                "short": "Anything special about operation behavior",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.versioning",
                "max": "1",
                "definition": "This field is set to no-version to specify that the system does not support (server) or use (client) versioning for this resource type. If this has some other value, the server must at least correctly track and populate the versionId meta-property on resources. If the value is 'versioned-update', then the server supports all the versioning features, including using e-tags for version integrity in the API.",
                "min": 0,
                "comments": "If a server supports versionIds correctly, it SHOULD support vread too, but is not required to do so.",
                "short": "no-version | versioned | versioned-update",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "How the system supports versioning for a resource.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/versioning-policy"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.readHistory",
                "max": "1",
                "definition": "A flag for whether the server is able to return past versions as part of the vRead operation.",
                "min": 0,
                "comments": "It is useful to support the vRead operation for current operations, even if past versions aren't available.",
                "short": "Whether vRead can return past versions",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.updateCreate",
                "max": "1",
                "definition": "A flag to indicate that the server allows or needs to allow the client to create new identities on the server (e.g. that is, the client PUTs to a location where there is no existing resource). Allowing this operation means that the server allows the client to create new identities on the server.",
                "min": 0,
                "comments": "Allowing the clients to create new identities on the server means that the system administrator needs to have confidence that the clients do not create clashing identities between them. Obviously, if there is only one client, this won't happen. While creating identities on the client means that the clients need to be managed, it's much more convenient for many scenarios if such management can be put in place.",
                "short": "If update can commit to a new identity",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.conditionalCreate",
                "max": "1",
                "definition": "A flag that indicates that the server supports conditional create.",
                "min": 0,
                "comments": "Conditional Create is mainly appropriate for interface engine scripts converting from other formats, such as v2.",
                "short": "If allows/uses conditional create",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.conditionalUpdate",
                "max": "1",
                "definition": "A flag that indicates that the server supports conditional update.",
                "min": 0,
                "comments": "Conditional Update is mainly appropriate for interface engine scripts converting from other formats, such as v2.",
                "short": "If allows/uses conditional update",
                "type": [
                    {
                        "code": "boolean"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.conditionalDelete",
                "max": "1",
                "definition": "A code that indicates how the server supports conditional delete.",
                "min": 0,
                "comments": "Conditional Delete is mainly appropriate for interface engine scripts converting from other formats, such as v2.",
                "short": "not-supported | single | multiple - how conditional delete is supported",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "A code that indicates how the server supports conditional delete.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/conditional-delete-status"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.searchInclude",
                "max": "*",
                "definition": "A list of _include values supported by the server.",
                "min": 0,
                "comments": "If this list is empty, the server does not support includes.",
                "short": "_include values supported by the server",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.searchRevInclude",
                "max": "*",
                "definition": "A list of _revinclude (reverse include) values supported by the server.",
                "min": 0,
                "comments": "If this list is empty, the server does not support includes.",
                "short": "_revinclude values supported by the server",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.searchParam",
                "max": "*",
                "definition": "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "constraint": [
                    {
                        "key": "cnf-13",
                        "severity": "error",
                        "xpath": "not(exists(f:chain)) or (f:type/@value = 'reference')",
                        "human": "Search parameters can only have chain names when the search parameter type is 'reference'"
                    }
                ],
                "name": "searchParam",
                "short": "Search params supported by implementation"
            },
            {
                "path": "Conformance.rest.resource.searchParam.name",
                "max": "1",
                "definition": "The name of the search parameter used in the interface.",
                "min": 1,
                "comments": "Parameter names cannot overlap with standard parameter names, and standard parameters cannot be redefined.",
                "short": "Name of search parameter",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.searchParam.definition",
                "max": "1",
                "definition": "An absolute URI that is a formal reference to where this parameter was first defined, so that a client can be confident of the meaning of the search parameter (a reference to [[[SearchParameter.url]]]).",
                "min": 0,
                "comments": "This SHOULD be present, and matches SearchParameter.url.",
                "short": "Source of definition for parameter",
                "type": [
                    {
                        "code": "uri"
                    }
                ]
            },
            {
                "path": "Conformance.rest.resource.searchParam.type",
                "max": "1",
                "definition": "The type of value a search parameter refers to, and how the content is interpreted.",
                "min": 1,
                "comments": "While this can be looked up from the definition, it is included here as a convenience for systems that autogenerate a query interface based on the server conformance statement.  It SHALL be the same as the type in the search parameter definition.",
                "short": "number | date | string | token | reference | composite | quantity | uri",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "Data types allowed to be used for search parameters.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/search-param-type"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.searchParam.documentation",
                "max": "1",
                "definition": "This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Server-specific usage"
            },
            {
                "path": "Conformance.rest.resource.searchParam.target",
                "max": "*",
                "definition": "Types of resource (if a resource is referenced).",
                "min": 0,
                "comments": "This SHALL be the same as or a proper subset of the resources listed in the search parameter definition.",
                "short": "Types of resource (if a resource reference)",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "One of the resource types defined as part of FHIR.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/resource-types"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.searchParam.modifier",
                "max": "*",
                "definition": "A modifier supported for the search parameter.",
                "min": 0,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "missing | exact | contains | not | text | in | not-in | below | above | type",
                "binding": {
                    "strength": "required",
                    "description": "A supported modifier for a search parameter.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/search-modifier-code"
                    }
                }
            },
            {
                "path": "Conformance.rest.resource.searchParam.chain",
                "max": "*",
                "definition": "Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference, and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from Conformance.rest.resource.searchParam.name on the target resource type.",
                "min": 0,
                "comments": "Systems are not required to list all the chain names they support, but if they don't list them, clients may not know to use them.",
                "short": "Chained names supported",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.interaction",
                "max": "*",
                "definition": "A specification of restful operations supported by the system.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "extension": [
                    {
                        "valueString": "SystemInteraction",
                        "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name"
                    }
                ],
                "short": "What operations are supported?"
            },
            {
                "path": "Conformance.rest.interaction.code",
                "max": "1",
                "definition": "A coded identifier of the operation, supported by the system.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "transaction | search-system | history-system",
                "binding": {
                    "strength": "required",
                    "description": "Operations supported by REST at the system level.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/system-restful-interaction"
                    }
                }
            },
            {
                "path": "Conformance.rest.interaction.documentation",
                "max": "1",
                "definition": "Guidance specific to the implementation of this operation, such as limitations on the kind of transactions allowed, or information about system wide search is implemented.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Anything special about operation behavior"
            },
            {
                "path": "Conformance.rest.transactionMode",
                "max": "1",
                "defaultValueCode": "not-supported",
                "definition": "A code that indicates how transactions are supported.",
                "min": 0,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "not-supported | batch | transaction | both",
                "binding": {
                    "strength": "required",
                    "description": "A code that indicates how transactions are supported.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/transaction-mode"
                    }
                }
            },
            {
                "path": "Conformance.rest.searchParam",
                "max": "*",
                "definition": "Search parameters that are supported for searching all resources for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
                "min": 0,
                "comments": "Typically, the only search parameters supported for all parameters are search parameters that apply to all resources - tags, profiles, text search etc.",
                "short": "Search params for searching all resources",
                "nameReference": "searchParam"
            },
            {
                "path": "Conformance.rest.operation",
                "max": "*",
                "definition": "Definition of an operation or a named query and with its parameters and their meaning and type.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Definition of an operation or a custom query"
            },
            {
                "path": "Conformance.rest.operation.name",
                "max": "1",
                "definition": "The name of a query, which is used in the _query parameter when the query is called.",
                "min": 1,
                "comments": "The name here SHOULD be the same as the name in the definition, unless there is a name clash and the name cannot be used.",
                "short": "Name by which the operation/query is invoked",
                "type": [
                    {
                        "code": "string"
                    }
                ]
            },
            {
                "path": "Conformance.rest.operation.definition",
                "max": "1",
                "definition": "Where the formal definition can be found.",
                "min": 1,
                "comments": "This can be used to build an HTML form to invoke the operation, for instance.",
                "short": "The defined operation/query",
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/OperationDefinition"
                        ]
                    }
                ]
            },
            {
                "path": "Conformance.rest.compartment",
                "max": "*",
                "definition": "An absolute URI which is a reference to the definition of a compartment hosted by the system.",
                "min": 0,
                "comments": "At present, the only defined compartments are at [[compartments.html]].",
                "short": "Compartments served/used by system",
                "type": [
                    {
                        "code": "uri"
                    }
                ]
            },
            {
                "path": "Conformance.messaging",
                "max": "*",
                "definition": "A description of the messaging capabilities of the solution.",
                "min": 0,
                "condition": [
                    "cnf-1"
                ],
                "comments": "Multiple repetitions allow the documentation of multiple endpoints per solution.",
                "short": "If messaging is supported",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ]
            },
            {
                "path": "Conformance.messaging.endpoint",
                "max": "*",
                "definition": "An endpoint (network accessible address) to which messages and/or replies are to be sent.",
                "min": 0,
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "A messaging service end-point",
                "alias": [
                    "3"
                ]
            },
            {
                "path": "Conformance.messaging.endpoint.protocol",
                "max": "1",
                "definition": "A list of the messaging transport protocol(s) identifiers, supported by this endpoint.",
                "min": 1,
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "short": "http | ftp | mllp +",
                "binding": {
                    "strength": "extensible",
                    "description": "The protocol used for message transport.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/message-transport"
                    }
                }
            },
            {
                "path": "Conformance.messaging.endpoint.address",
                "max": "1",
                "definition": "The network address of the end-point. For solutions that do not use network addresses for routing, it can be just an identifier.",
                "min": 1,
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "short": "Address of end-point"
            },
            {
                "path": "Conformance.messaging.reliableCache",
                "max": "1",
                "definition": "Length if the receiver's reliable messaging cache in minutes (if a receiver) or how long the cache length on the receiver should be (if a sender).",
                "min": 0,
                "comments": "If this value is missing then the application does not implement (receiver) or depend on (sender) reliable messaging.",
                "short": "Reliable Message Cache Length (min)",
                "type": [
                    {
                        "code": "unsignedInt"
                    }
                ]
            },
            {
                "path": "Conformance.messaging.documentation",
                "max": "1",
                "definition": "Documentation about the system's messaging capabilities for this endpoint not otherwise documented by the conformance statement.  For example, process for becoming an authorized messaging exchange partner.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Messaging interface behavior details"
            },
            {
                "path": "Conformance.messaging.event",
                "max": "*",
                "definition": "A description of the solution's support for an event at this end-point.",
                "min": 1,
                "comments": "The same event may be listed up to two times - once as sender and once as receiver.",
                "short": "Declare support for this event",
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ]
            },
            {
                "path": "Conformance.messaging.event.code",
                "max": "1",
                "definition": "A coded identifier of a supported messaging event.",
                "min": 1,
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "short": "Event type",
                "binding": {
                    "strength": "preferred",
                    "description": "One of the message events defined as part of FHIR.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/message-events"
                    }
                }
            },
            {
                "path": "Conformance.messaging.event.category",
                "max": "1",
                "definition": "The impact of the content of the message.",
                "min": 0,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "Consequence | Currency | Notification",
                "binding": {
                    "strength": "required",
                    "description": "The impact of the content of a message.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/message-significance-category"
                    }
                }
            },
            {
                "path": "Conformance.messaging.event.mode",
                "max": "1",
                "definition": "The mode of this event declaration - whether application is sender or receiver.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "sender | receiver",
                "binding": {
                    "strength": "required",
                    "description": "The mode of a message conformance statement.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/message-conformance-event-mode"
                    }
                }
            },
            {
                "path": "Conformance.messaging.event.focus",
                "max": "1",
                "definition": "A resource associated with the event.  This is the resource that defines the event.",
                "min": 1,
                "comments": "This SHALL be provided if the event type supports multiple different resource types.",
                "short": "Resource that's focus of message",
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "strength": "required",
                    "description": "One of the resource types defined as part of FHIR.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/resource-types"
                    }
                }
            },
            {
                "path": "Conformance.messaging.event.request",
                "max": "1",
                "definition": "Information about the request for this event.",
                "min": 1,
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                        ]
                    }
                ],
                "short": "Profile that describes the request"
            },
            {
                "path": "Conformance.messaging.event.response",
                "max": "1",
                "definition": "Information about the response for this event.",
                "min": 1,
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                        ]
                    }
                ],
                "short": "Profile that describes the response"
            },
            {
                "path": "Conformance.messaging.event.documentation",
                "max": "1",
                "definition": "Guidance on how this event is handled, such as internal system trigger points, business rules, etc.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Endpoint-specific event documentation"
            },
            {
                "path": "Conformance.document",
                "max": "*",
                "definition": "A document definition.",
                "min": 0,
                "condition": [
                    "cnf-1"
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "short": "Document definition"
            },
            {
                "path": "Conformance.document.mode",
                "max": "1",
                "definition": "Mode of this document declaration - whether application is producer or consumer.",
                "min": 1,
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "short": "producer | consumer",
                "binding": {
                    "strength": "required",
                    "description": "Whether the application produces or consumes documents.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/document-mode"
                    }
                }
            },
            {
                "path": "Conformance.document.documentation",
                "max": "1",
                "definition": "A description of how the application supports or uses the specified document profile.  For example, when are documents created, what action is taken with consumed documents, etc.",
                "min": 0,
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "short": "Description of document support"
            },
            {
                "path": "Conformance.document.profile",
                "max": "1",
                "definition": "A constraint on a resource used in the document.",
                "min": 1,
                "comments": "The first resource is the document resource.",
                "short": "Constraint on a resource used in the document",
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
                        ]
                    }
                ]
            }
        ]
    },
    "resourceType": "StructureDefinition",
    "description": "Base StructureDefinition for Conformance Resource",
    "url": "http://hl7.org/fhir/StructureDefinition/Conformance",
    "kind": "resource",
    "contact": [
        {
            "telecom": [
                {
                    "system": "other",
                    "value": "http://hl7.org/fhir"
                }
            ]
        },
        {
            "telecom": [
                {
                    "system": "other",
                    "value": "http://www.hl7.org/Special/committees/fiwg/index.cfm"
                }
            ]
        }
    ],
    "mapping": [
        {
            "identity": "w5",
            "name": "W5 Mapping",
            "uri": "http://hl7.org/fhir/w5"
        },
        {
            "identity": "rim",
            "name": "RIM",
            "uri": "http://hl7.org/v3"
        }
    ],
    "status": "draft",
    "base": "http://hl7.org/fhir/StructureDefinition/DomainResource",
    "name": "Conformance",
    "id": "Conformance",
    "meta": {
        "lastUpdated": "2015-10-24T07:41:03.495+11:00"
    },
    "fhirVersion": "1.0.2",
    "date": "2015-10-24T07:41:03+11:00"
}