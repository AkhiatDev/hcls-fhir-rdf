{
    "id": "ehrsrle-auditevent",
    "constrainedType": "AuditEvent",
    "abstract": false,
    "resourceType": "StructureDefinition",
    "contact": [
        {
            "telecom": [
                {
                    "value": "http://hl7.org/special/committees/ehr.html",
                    "system": "other"
                }
            ]
        }
    ],
    "base": "http://hl7.org/fhir/StructureDefinition/AuditEvent",
    "differential": {
        "element": [
            {
                "min": 0,
                "name": "EHRSRLE-AuditEvent",
                "max": "*",
                "type": [
                    {
                        "code": "AuditEvent"
                    }
                ],
                "path": "AuditEvent"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.event"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.event.type"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.event.subtype"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.event.action"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.event.dateTime"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.event.purposeOfEvent"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant.role"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant.reference"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant.userId"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant.requestor"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant.location"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant.policy"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant.network"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant.network.address"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant.network.type"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.participant.purposeOfUse"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.source"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.source.site"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.source.identifier"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.source.type"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.object"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.object.identifier"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.object.reference"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.object.type"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.object.role"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.object.lifecycle"
            },
            {
                "mustSupport": true,
                "path": "AuditEvent.object.securityLabel"
            }
        ]
    },
    "url": "http://hl7.org/fhir/StructureDefinition/ehrsrle-auditevent",
    "kind": "resource",
    "publisher": "Health Level Seven International (Electronic Health Record)",
    "snapshot": {
        "element": [
            {
                "mapping": [
                    {
                        "map": "Message",
                        "identity": "dicom"
                    },
                    {
                        "map": "ControlAct[moodCode=EVN]",
                        "identity": "rim"
                    },
                    {
                        "map": "infrastructure.information",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "AuditEvent"
                    }
                ],
                "comments": "Based on ATNA (RFC 3881).",
                "path": "AuditEvent",
                "max": "*",
                "min": 0,
                "short": "Event record kept for security purposes",
                "name": "EHRSRLE-AuditEvent",
                "definition": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent"
                }
            },
            {
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "isSummary": true,
                "comments": "The only time that a resource does not have an id is when it is being submitted to the server using a create operation. Bundles always have an id, though it is usually a generated UUID.",
                "path": "AuditEvent.id",
                "max": "1",
                "min": 0,
                "short": "Logical id of this artifact",
                "definition": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.id"
                }
            },
            {
                "type": [
                    {
                        "code": "Meta"
                    }
                ],
                "isSummary": true,
                "path": "AuditEvent.meta",
                "max": "1",
                "min": 0,
                "short": "Metadata about the resource",
                "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.meta"
                }
            },
            {
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "isModifier": true,
                "isSummary": true,
                "comments": "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element as much as possible.",
                "path": "AuditEvent.implicitRules",
                "max": "1",
                "min": 0,
                "short": "A set of rules under which this content was created",
                "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.implicitRules"
                }
            },
            {
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "comments": "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource  Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
                "path": "AuditEvent.language",
                "max": "1",
                "min": 0,
                "short": "Language of the resource content",
                "binding": {
                    "description": "A human language.",
                    "valueSetUri": "http://tools.ietf.org/html/bcp47",
                    "strength": "required"
                },
                "definition": "The base language in which the resource is written.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.language"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Act.text?",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Narrative"
                    }
                ],
                "condition": [
                    "dom-1"
                ],
                "comments": "Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative.",
                "path": "AuditEvent.text",
                "alias": [
                    "narrative",
                    "html",
                    "xhtml",
                    "display"
                ],
                "min": 0,
                "short": "Text summary of the resource, for human interpretation",
                "max": "1",
                "definition": "A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.text"
                }
            },
            {
                "mapping": [
                    {
                        "map": "N/A",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Resource"
                    }
                ],
                "comments": "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again.",
                "path": "AuditEvent.contained",
                "alias": [
                    "inline resources",
                    "anonymous resources",
                    "contained resources"
                ],
                "min": 0,
                "short": "Contained, inline Resources",
                "max": "*",
                "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.contained"
                }
            },
            {
                "mapping": [
                    {
                        "map": "N/A",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.extension",
                "alias": [
                    "extensions",
                    "user content"
                ],
                "min": 0,
                "short": "Additional Content defined by implementations",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.extension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "N/A",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.modifierExtension",
                "alias": [
                    "extensions",
                    "user content"
                ],
                "min": 0,
                "short": "Extensions that cannot be ignored",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.modifierExtension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Activity",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "EventIdentification",
                        "identity": "dicom"
                    },
                    {
                        "map": "N/A (no nesting in v3)",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "mustSupport": true,
                "path": "AuditEvent.event",
                "max": "1",
                "min": 1,
                "short": "What was done",
                "requirements": "The event must be identified.",
                "definition": "Identifies the name, action type, time, and disposition of the audited event.",
                "base": {
                    "min": 1,
                    "max": "1",
                    "path": "AuditEvent.event"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "path": "AuditEvent.event.id",
                "representation": [
                    "xmlAttr"
                ],
                "max": "1",
                "min": 0,
                "short": "xml:id (or equivalent in JSON)",
                "definition": "unique id for the element within a resource (for internal references).",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.event.id"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.event.extension",
                "alias": [
                    "extensions",
                    "user content"
                ],
                "min": 0,
                "short": "Additional Content defined by implementations",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.event.extension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "N/A",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.event.modifierExtension",
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ],
                "min": 0,
                "short": "Extensions that cannot be ignored",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.event.modifierExtension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "EventId",
                        "identity": "dicom"
                    },
                    {
                        "map": ".code (type, subtype and action are pre-coordinated or sent as translations)",
                        "identity": "rim"
                    },
                    {
                        "map": "what",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "isSummary": true,
                "min": 1,
                "short": "Type/identifier of event",
                "binding": {
                    "description": "Type of event.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/audit-event-type"
                    },
                    "strength": "extensible"
                },
                "max": "1",
                "base": {
                    "min": 1,
                    "max": "1",
                    "path": "AuditEvent.event.type"
                },
                "mustSupport": true,
                "path": "AuditEvent.event.type",
                "requirements": "This identifies the performed function. For \"Execute\" Event Action Code audit records, this identifies the application function performed.",
                "definition": "Identifier for a family of the event.  For example, a menu item, program, rule, policy, function code, application name or URL. It identifies the performed function."
            },
            {
                "mapping": [
                    {
                        "map": "EventTypeCode",
                        "identity": "dicom"
                    },
                    {
                        "map": ".code (type, subtype and action are pre-coordinated or sent as translations)",
                        "identity": "rim"
                    },
                    {
                        "map": "what",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "isSummary": true,
                "min": 0,
                "short": "More specific type/id for the event",
                "binding": {
                    "description": "Sub-type of event.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/audit-event-sub-type"
                    },
                    "strength": "extensible"
                },
                "max": "*",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.event.subtype"
                },
                "mustSupport": true,
                "path": "AuditEvent.event.subtype",
                "requirements": "This field enables queries of messages by implementation-defined event categories.",
                "definition": "Identifier for the category of event."
            },
            {
                "mapping": [
                    {
                        "map": "EventActionCode",
                        "identity": "dicom"
                    },
                    {
                        "map": ".code (type, subtype and action are pre-coordinated or sent as translations)",
                        "identity": "rim"
                    },
                    {
                        "map": "what",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "isSummary": true,
                "min": 0,
                "short": "Type of action performed during the event",
                "binding": {
                    "description": "Indicator for type of action performed during the event that generated the audit.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/audit-event-action"
                    },
                    "strength": "required"
                },
                "max": "1",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.event.action"
                },
                "mustSupport": true,
                "path": "AuditEvent.event.action",
                "requirements": "This broadly indicates what kind of action was done on the Participant Object.",
                "definition": "Indicator for type of action performed during the event that generated the audit."
            },
            {
                "mapping": [
                    {
                        "map": "Provenance.recorded",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "Activity.when",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "EventDateTime",
                        "identity": "dicom"
                    },
                    {
                        "map": ".effectiveTime",
                        "identity": "rim"
                    },
                    {
                        "map": "when.recorded",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "instant"
                    }
                ],
                "isSummary": true,
                "min": 1,
                "short": "Time when the event occurred on source",
                "max": "1",
                "base": {
                    "min": 1,
                    "max": "1",
                    "path": "AuditEvent.event.dateTime"
                },
                "mustSupport": true,
                "comments": "In a distributed system, some sort of common time base (e.g. an NTP [RFC1305] server) is a good implementation tactic.",
                "path": "AuditEvent.event.dateTime",
                "requirements": "This ties an event to a specific date and time. Security audits typically require a consistent time base (e.g. UTC), to eliminate time-zone issues arising from geographical distribution.",
                "definition": "The time when the event occurred on the source."
            },
            {
                "mapping": [
                    {
                        "map": "EventOutcomeIndicator",
                        "identity": "dicom"
                    },
                    {
                        "map": ".actionNegationInd",
                        "identity": "rim"
                    },
                    {
                        "map": "what",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "isSummary": true,
                "comments": "In some cases a \"success\" may be partial, for example, an incomplete or interrupted transfer of a radiological study. For the purpose of establishing accountability, these distinctions are not relevant.",
                "path": "AuditEvent.event.outcome",
                "max": "1",
                "min": 0,
                "short": "Whether the event succeeded or failed",
                "binding": {
                    "description": "Indicates whether the event succeeded or failed",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/audit-event-outcome"
                    },
                    "strength": "required"
                },
                "definition": "Indicates whether the event succeeded or failed.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.event.outcome"
                }
            },
            {
                "mapping": [
                    {
                        "map": "EventOutcomeDescription",
                        "identity": "dicom"
                    },
                    {
                        "map": ".outboundRelationship[typeCode=OUT].target.text",
                        "identity": "rim"
                    },
                    {
                        "map": "what",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true,
                "path": "AuditEvent.event.outcomeDesc",
                "max": "1",
                "min": 0,
                "short": "Description of the event outcome",
                "definition": "A free text description of the outcome of the event.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.event.outcomeDesc"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Provenance.reason, Provenance.activity",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "Activity.Activity",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "EventPurposeOfUse",
                        "identity": "dicom"
                    },
                    {
                        "map": "* .reasonCode [ControlActReason when Act.class = CACT Control Act]\n*.outboundRelationship[typeCode=RSON].target",
                        "identity": "rim"
                    },
                    {
                        "map": "why",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "isSummary": true,
                "min": 0,
                "short": "The purposeOfUse of the event",
                "binding": {
                    "description": "The reason the activity took place.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/v3-PurposeOfUse"
                    },
                    "strength": "extensible"
                },
                "max": "*",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.event.purposeOfEvent"
                },
                "mustSupport": true,
                "comments": "Use participant.purposeOfUse when you know that is specific to the participant, otherwise use event.purposeOfEvent. For example, during a machine-to-machine transfer it might not be obvious to the audit system who caused the event, but it does know why.",
                "path": "AuditEvent.event.purposeOfEvent",
                "definition": "The purposeOfUse (reason) that was used during the event being recorded."
            },
            {
                "mapping": [
                    {
                        "map": "Provenance.agent",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "Agent",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "ActiveParticipant",
                        "identity": "dicom"
                    },
                    {
                        "map": ".participation",
                        "identity": "rim"
                    },
                    {
                        "map": "who",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "mustSupport": true,
                "comments": "There may be more than one user per event, for example, in cases of actions initiated by one user for other users, or in events that involve more than one user, hardware device, or system process. However, only one user may be the initiator/requestor for the event.",
                "path": "AuditEvent.participant",
                "max": "*",
                "min": 1,
                "short": "A person, a hardware device or software process",
                "requirements": "The event has one or more active participants.",
                "definition": "A person, a hardware device or software process.",
                "base": {
                    "min": 1,
                    "max": "*",
                    "path": "AuditEvent.participant"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "path": "AuditEvent.participant.id",
                "representation": [
                    "xmlAttr"
                ],
                "max": "1",
                "min": 0,
                "short": "xml:id (or equivalent in JSON)",
                "definition": "unique id for the element within a resource (for internal references).",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.id"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.participant.extension",
                "alias": [
                    "extensions",
                    "user content"
                ],
                "min": 0,
                "short": "Additional Content defined by implementations",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.participant.extension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "N/A",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.participant.modifierExtension",
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ],
                "min": 0,
                "short": "Extensions that cannot be ignored",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.participant.modifierExtension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Provenance.agent.role",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "Agent.Attribution",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "RoleIdCode",
                        "identity": "dicom"
                    },
                    {
                        "map": ".typeCode and/or .functionCode",
                        "identity": "rim"
                    },
                    {
                        "map": "who",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "CodeableConcept"
                    }
                ],
                "binding": {
                    "description": "Role(s) the user plays (from RBAC).",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/dicm-402-roleid"
                    },
                    "strength": "extensible"
                },
                "mustSupport": true,
                "path": "AuditEvent.participant.role",
                "max": "*",
                "min": 0,
                "short": "User roles (e.g. local RBAC codes)",
                "requirements": "This value ties an audited event to a user's role(s). It is an optional value that might be used to group events for analysis by user functional role categories.",
                "definition": "Specification of the role(s) the user plays when performing the event. Usually the codes used in this element are local codes defined by the role-based access control security system used in the local context.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.participant.role"
                }
            },
            {
                "isSummary": true,
                "mapping": [
                    {
                        "map": "Provenance.agent.actor",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "Agent.Identity",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": ".role",
                        "identity": "rim"
                    },
                    {
                        "map": "who",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/Practitioner"
                        ]
                    },
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/Organization"
                        ]
                    },
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/Device"
                        ]
                    },
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/Patient"
                        ]
                    },
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/RelatedPerson"
                        ]
                    }
                ],
                "mustSupport": true,
                "path": "AuditEvent.participant.reference",
                "max": "1",
                "min": 0,
                "short": "Direct reference to resource",
                "requirements": "This field ties an audit event to a specific resource.",
                "definition": "Direct reference to a resource that identifies the participant.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.reference"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Provenance.agent.userId",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "Agent.Identity",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "UserId",
                        "identity": "dicom"
                    },
                    {
                        "map": ".id",
                        "identity": "rim"
                    },
                    {
                        "map": "who",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Identifier"
                    }
                ],
                "isSummary": true,
                "min": 0,
                "short": "Unique identifier for the user",
                "max": "1",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.userId"
                },
                "mustSupport": true,
                "comments": "a unique value within the Audit Source ID. For node-based authentication -- where only the system hardware or process, but not a human user, is identified -- User ID would be the node name.",
                "path": "AuditEvent.participant.userId",
                "requirements": "This field ties an audit event to a specific user.",
                "definition": "Unique identifier for the user actively participating in the event."
            },
            {
                "mapping": [
                    {
                        "map": "Agent.Identity",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "AlternativeUserId",
                        "identity": "dicom"
                    },
                    {
                        "map": ".id (distinguish id type by root)",
                        "identity": "rim"
                    },
                    {
                        "map": "who",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "path": "AuditEvent.participant.altId",
                "max": "1",
                "min": 0,
                "short": "Alternative User id e.g. authentication",
                "requirements": "In some situations a human user may authenticate with one identity but, to access a specific application system, may use a synonymous identify. For example, some \"single sign on\" implementations will do this. The alternative identifier would then be the original identify  used for authentication, and the User ID is the one known to and used by the application.",
                "definition": "Alternative Participant Identifier. For a human, this should be a user identifier text string from authentication system. This identifier would be one known to a common authentication system (e.g. single sign-on), if available.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.altId"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Agent.Identity",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "UserName",
                        "identity": "dicom"
                    },
                    {
                        "map": ".name",
                        "identity": "rim"
                    },
                    {
                        "map": "who",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "path": "AuditEvent.participant.name",
                "max": "1",
                "min": 0,
                "short": "Human-meaningful name for the user",
                "requirements": "The User ID and Authorization User ID may be internal or otherwise obscure values. This field assists the auditor in identifying the actual user.",
                "definition": "Human-meaningful name for the user.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.name"
                }
            },
            {
                "mapping": [
                    {
                        "map": "UserIsRequestor",
                        "identity": "dicom"
                    },
                    {
                        "map": "If participation.typeCode was author, then true",
                        "identity": "rim"
                    },
                    {
                        "map": "who",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "boolean"
                    }
                ],
                "mustSupport": true,
                "comments": "There can only be one initiator. If the initiator is not clear, then do not choose any one participant as the initiator.",
                "path": "AuditEvent.participant.requestor",
                "max": "1",
                "min": 1,
                "short": "Whether user is initiator",
                "requirements": "This value is used to distinguish between requestor-users and recipient-users. For example, one person may initiate a report-output to be sent to another user.",
                "definition": "Indicator that the user is or is not the requestor, or initiator, for the event being audited.",
                "base": {
                    "min": 1,
                    "max": "1",
                    "path": "AuditEvent.participant.requestor"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Provenance.location",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "Activity.location",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "* Role.Class =SDLOC\n*Role.Code = ServiceDeliveryLocationRoleType\n *Entity.Code  = PlaceEntityType = df.Types of places for  Entity.Class = PLC\n*EntityClass = PLC = df.A physical place or site with its containing structure. May be natural or man-made. The geographic position of a place may or may not be constant.",
                        "identity": "rim"
                    },
                    {
                        "map": "where",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/Location"
                        ]
                    }
                ],
                "mustSupport": true,
                "path": "AuditEvent.participant.location",
                "max": "1",
                "min": 0,
                "short": "Where",
                "definition": "Where the event occurred.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.location"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Provenance.policy",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "ParticipantRoleIDCode",
                        "identity": "dicom"
                    },
                    {
                        "map": "ActPolicyType",
                        "identity": "rim"
                    },
                    {
                        "map": "why",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "uri"
                    }
                ],
                "mustSupport": true,
                "comments": "For example: Where an OAuth token authorizes, the unique identifier from the OAuth token is placed into the policy element Where a policy engine (e.g. XACML) holds policy logic, the unique policy identifier is placed into the policy element.",
                "path": "AuditEvent.participant.policy",
                "max": "*",
                "min": 0,
                "short": "Policy that authorized event",
                "requirements": "This value is used retrospectively to determine the authorization policies.",
                "definition": "The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.participant.policy"
                }
            },
            {
                "mapping": [
                    {
                        "map": "MediaType",
                        "identity": "dicom"
                    },
                    {
                        "map": ".player.description.mediaType",
                        "identity": "rim"
                    },
                    {
                        "map": "where",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "binding": {
                    "description": "Used when the event is about exporting/importing onto media.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/dicm-405-mediatype"
                    },
                    "strength": "extensible"
                },
                "path": "AuditEvent.participant.media",
                "max": "1",
                "min": 0,
                "short": "Type of media",
                "requirements": "Usually, this is used instead of specifying a network address. This field is not used for Media Id (i.e. the serial number of a CD).",
                "definition": "Type of media involved. Used when the event is about exporting/importing onto media.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.media"
                }
            },
            {
                "mapping": [
                    {
                        "map": ".player.description.reference",
                        "identity": "rim"
                    },
                    {
                        "map": "where",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "mustSupport": true,
                "path": "AuditEvent.participant.network",
                "max": "1",
                "min": 0,
                "short": "Logical network location for application activity",
                "definition": "Logical network location for application activity, if the activity has a network location.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.network"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "path": "AuditEvent.participant.network.id",
                "representation": [
                    "xmlAttr"
                ],
                "max": "1",
                "min": 0,
                "short": "xml:id (or equivalent in JSON)",
                "definition": "unique id for the element within a resource (for internal references).",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.network.id"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.participant.network.extension",
                "alias": [
                    "extensions",
                    "user content"
                ],
                "min": 0,
                "short": "Additional Content defined by implementations",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.participant.network.extension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "N/A",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.participant.network.modifierExtension",
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ],
                "min": 0,
                "short": "Extensions that cannot be ignored",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.participant.network.modifierExtension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Agent.Location",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "NetworkAccessPointID",
                        "identity": "dicom"
                    },
                    {
                        "map": "pre-coordinated into URL",
                        "identity": "rim"
                    },
                    {
                        "map": "where",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "mustSupport": true,
                "comments": "This could be a device id, IP address or some other identifier associated with a device.",
                "path": "AuditEvent.participant.network.address",
                "max": "1",
                "min": 0,
                "short": "Identifier for the network access point of the user device",
                "requirements": "This datum identifies the user's network access point, which may be distinct from the server that performed the action. It is an optional value that may be used to group events recorded on separate servers for analysis of a specific network access point's data access across all servers.",
                "definition": "An identifier for the network access point of the user device for the audit event.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.network.address"
                }
            },
            {
                "mapping": [
                    {
                        "map": "NetworkAccessPointTypeCode",
                        "identity": "dicom"
                    },
                    {
                        "map": "pre-coordinated into URL",
                        "identity": "rim"
                    },
                    {
                        "map": "where",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "code"
                    }
                ],
                "binding": {
                    "description": "The type of network access point of this participant in the audit event",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/network-type"
                    },
                    "strength": "required"
                },
                "mustSupport": true,
                "path": "AuditEvent.participant.network.type",
                "max": "1",
                "min": 0,
                "short": "The type of network access point",
                "requirements": "This datum identifies the type of network access point identifier of the user device for the audit event. It is an optional value that may be used to group events recorded on separate servers for analysis of access according to a network access point's type.",
                "definition": "An identifier for the type of network access point that originated the audit event.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.participant.network.type"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Agent.Activity",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "*.reasonCode [ActHealthInformationPurposeOfUseReason codes/v:PurposeOfUse\n(2.16.840.1.113883.1.11.20448)\n* .outboundRelationship[typeCode=RSON or SUBJ].target",
                        "identity": "rim"
                    },
                    {
                        "map": "why",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "mustSupport": true,
                "comments": "Use participant.purposeOfUse when you know that is specific to the participant, otherwise use event.purposeOfEvent. For example, during a machine-to-machine transfer it might not be obvious to the audit system who caused the event, but it does know why.",
                "path": "AuditEvent.participant.purposeOfUse",
                "max": "*",
                "min": 0,
                "short": "Reason given for this user",
                "binding": {
                    "description": "The reason the activity took place.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/v3-PurposeOfUse"
                    },
                    "strength": "extensible"
                },
                "definition": "The reason (purpose of use), specific to this participant, that was used during the event being recorded.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.participant.purposeOfUse"
                }
            },
            {
                "mapping": [
                    {
                        "map": "AuditSourceIdentification",
                        "identity": "dicom"
                    },
                    {
                        "map": ".participation[typeCode=INF].role[classCode=ASSIGN].player[classCode=DEV, determinerCode=INSTANCE]",
                        "identity": "rim"
                    },
                    {
                        "map": "who.witness",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "mustSupport": true,
                "comments": "Since multi-tier, distributed, or composite applications make source identification ambiguous, this collection of fields may repeat for each application or process actively involved in the event. For example, multiple value-sets can identify participating web servers, application processes, and database server threads in an n-tier distributed application. Passive event participants (e.g. low-level network transports) need not be identified.",
                "path": "AuditEvent.source",
                "max": "1",
                "min": 1,
                "short": "Application systems and processes",
                "requirements": "The event is reported by one source.",
                "definition": "Application systems and processes.",
                "base": {
                    "min": 1,
                    "max": "1",
                    "path": "AuditEvent.source"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "path": "AuditEvent.source.id",
                "representation": [
                    "xmlAttr"
                ],
                "max": "1",
                "min": 0,
                "short": "xml:id (or equivalent in JSON)",
                "definition": "unique id for the element within a resource (for internal references).",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.source.id"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.source.extension",
                "alias": [
                    "extensions",
                    "user content"
                ],
                "min": 0,
                "short": "Additional Content defined by implementations",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.source.extension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "N/A",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.source.modifierExtension",
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ],
                "min": 0,
                "short": "Extensions that cannot be ignored",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.source.modifierExtension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "AuditEnterpriseSiteId",
                        "identity": "dicom"
                    },
                    {
                        "map": ".scopedRole[classCode=LOCE].player.desc",
                        "identity": "rim"
                    },
                    {
                        "map": "who.witness",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "mustSupport": true,
                "path": "AuditEvent.source.site",
                "max": "1",
                "min": 0,
                "short": "Logical source location within the enterprise",
                "requirements": "This value differentiates among the sites in a multi-site enterprise health information system.",
                "definition": "Logical source location within the healthcare enterprise network.  For example, a hospital or other provider location within a multi-entity provider group.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.source.site"
                }
            },
            {
                "isSummary": true,
                "mapping": [
                    {
                        "map": "AuditSourceId",
                        "identity": "dicom"
                    },
                    {
                        "map": ".id",
                        "identity": "rim"
                    },
                    {
                        "map": "who.witness",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Identifier"
                    }
                ],
                "mustSupport": true,
                "path": "AuditEvent.source.identifier",
                "max": "1",
                "min": 1,
                "short": "The identity of source detecting the event",
                "requirements": "This field ties the event to a specific source system. It may be used to group events for analysis according to where the event was detected.",
                "definition": "Identifier of the source where the event was detected.",
                "base": {
                    "min": 1,
                    "max": "1",
                    "path": "AuditEvent.source.identifier"
                }
            },
            {
                "mapping": [
                    {
                        "map": "AuditSourceTypeCode",
                        "identity": "dicom"
                    },
                    {
                        "map": ".code",
                        "identity": "rim"
                    },
                    {
                        "map": "who.witness",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "binding": {
                    "description": "Code specifying the type of system that detected and recorded the event.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/audit-source-type"
                    },
                    "strength": "extensible"
                },
                "mustSupport": true,
                "path": "AuditEvent.source.type",
                "max": "*",
                "min": 0,
                "short": "The type of source where event originated",
                "requirements": "This field indicates which type of source is identified by the Audit Source ID. It is an optional value that may be used to group events for analysis according to the type of source where the event occurred.",
                "definition": "Code specifying the type of source where event originated.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.source.type"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Provenance.target, Provenance.entity",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "Entity",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "ParticipantObjectIdentification",
                        "identity": "dicom"
                    },
                    {
                        "map": ".outboundRelationship[typeCode=SUBJ].target  or  .participation[typeCode=SBJ].role",
                        "identity": "rim"
                    },
                    {
                        "map": "what",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "constraint": [
                    {
                        "xpath": "not(exists(f:name)) or not(exists(f:query))",
                        "human": "Either a name or a query (NOT both)",
                        "severity": "error",
                        "key": "sev-1"
                    }
                ],
                "min": 0,
                "short": "Specific instances of data or objects that have been accessed",
                "max": "*",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.object"
                },
                "mustSupport": true,
                "comments": "Required unless the values for Event Identification, Active Participant Identification, and Audit Source Identification are sufficient to document the entire auditable event. Because events may have more than one participant object, this group can be a repeating set of values.",
                "path": "AuditEvent.object",
                "requirements": "The event may have other objects involved.",
                "definition": "Specific instances of data or objects that have been accessed."
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "path": "AuditEvent.object.id",
                "representation": [
                    "xmlAttr"
                ],
                "max": "1",
                "min": 0,
                "short": "xml:id (or equivalent in JSON)",
                "definition": "unique id for the element within a resource (for internal references).",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.object.id"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.object.extension",
                "alias": [
                    "extensions",
                    "user content"
                ],
                "min": 0,
                "short": "Additional Content defined by implementations",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.object.extension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "N/A",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.object.modifierExtension",
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ],
                "min": 0,
                "short": "Extensions that cannot be ignored",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.object.modifierExtension"
                }
            },
            {
                "isSummary": true,
                "mapping": [
                    {
                        "map": "ParticipantObjectID and ParticipantObjectIDTypeCode",
                        "identity": "dicom"
                    },
                    {
                        "map": ".id.extension",
                        "identity": "rim"
                    },
                    {
                        "map": "what",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Identifier"
                    }
                ],
                "mustSupport": true,
                "comments": "Identifier detail depends on object type.",
                "path": "AuditEvent.object.identifier",
                "max": "1",
                "min": 0,
                "short": "Specific instance of object (e.g. versioned)",
                "definition": "Identifies a specific instance of the participant object. The reference should always be version specific.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.object.identifier"
                }
            },
            {
                "isSummary": true,
                "mapping": [
                    {
                        "map": "Provenance.target, Provenance.entity.reference",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "ParticipantObjectID",
                        "identity": "dicom"
                    },
                    {
                        "map": "[self]",
                        "identity": "rim"
                    },
                    {
                        "map": "what",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Reference",
                        "profile": [
                            "http://hl7.org/fhir/StructureDefinition/Resource"
                        ]
                    }
                ],
                "mustSupport": true,
                "path": "AuditEvent.object.reference",
                "max": "1",
                "min": 0,
                "short": "Specific instance of resource (e.g. versioned)",
                "definition": "Identifies a specific instance of the participant object. The reference should always be version specific.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.object.reference"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Provenance.entity.type",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "Entity.type",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "ParticipantObjectTypeCode",
                        "identity": "dicom"
                    },
                    {
                        "map": "[self::Act].code or role.player.code",
                        "identity": "rim"
                    },
                    {
                        "map": "what",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "min": 0,
                "short": "Type of object involved",
                "binding": {
                    "description": "Code for the object type involved audited.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/object-type"
                    },
                    "strength": "extensible"
                },
                "max": "1",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.object.type"
                },
                "mustSupport": true,
                "comments": "This value is distinct from the user's role or any user relationship to the participant object.",
                "path": "AuditEvent.object.type",
                "requirements": "To describe the object being acted upon. In addition to queries on the subject of the action in an auditable event, it is also important to be able to query on the object type for the action.",
                "definition": "The type of the object that was involved in this audit event."
            },
            {
                "mapping": [
                    {
                        "map": "Entity.role",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "ParticipantObjectTypeCodeRole",
                        "identity": "dicom"
                    },
                    {
                        "map": "role.code (not sure what this would mean for an Act)",
                        "identity": "rim"
                    },
                    {
                        "map": "context",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "min": 0,
                "short": "What role the Object played",
                "binding": {
                    "description": "Code representing the role the Object played in the event.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/object-role"
                    },
                    "strength": "extensible"
                },
                "max": "1",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.object.role"
                },
                "mustSupport": true,
                "comments": "See RFC 3881 for rules concerning matches between role and type.",
                "path": "AuditEvent.object.role",
                "requirements": "For some detailed audit analysis it may be necessary to indicate a more granular type of participant, based on the application role it serves.",
                "definition": "Code representing the functional application role of Participant Object being audited."
            },
            {
                "mapping": [
                    {
                        "map": "Provenance.entity.role",
                        "identity": "fhirprovenance"
                    },
                    {
                        "map": "Entity.role",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "ParticipantObjectDataLifeCycle",
                        "identity": "dicom"
                    },
                    {
                        "map": "target of ObservationEvent[code=\"lifecycle\"].value",
                        "identity": "rim"
                    },
                    {
                        "map": "context",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "min": 0,
                "short": "Life-cycle stage for the object",
                "binding": {
                    "description": "Identifier for the data life-cycle stage for the object.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/object-lifecycle"
                    },
                    "strength": "extensible"
                },
                "max": "1",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.object.lifecycle"
                },
                "mustSupport": true,
                "comments": "This can be used to provide an audit trail for data, over time, as it passes through the system.",
                "path": "AuditEvent.object.lifecycle",
                "requirements": "Institutional policies for privacy and security may optionally fall under different accountability rules based on data life cycle. This provides a differentiating value for those cases.",
                "definition": "Identifier for the data life-cycle stage for the participant object."
            },
            {
                "mapping": [
                    {
                        "map": "ParticipantObjectSensitivity",
                        "identity": "dicom"
                    },
                    {
                        "map": ".confidentialityCode",
                        "identity": "rim"
                    },
                    {
                        "map": "context",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "Coding"
                    }
                ],
                "binding": {
                    "description": "Security Labels from the Healthcare Privacy and Security Classification System.",
                    "valueSetReference": {
                        "reference": "http://hl7.org/fhir/ValueSet/security-labels"
                    },
                    "strength": "extensible"
                },
                "mustSupport": true,
                "path": "AuditEvent.object.securityLabel",
                "max": "*",
                "min": 0,
                "short": "Security labels applied to the object",
                "requirements": "This field identifies the security labels for a specific instance of an object, such as a patient, to detect/track privacy and security issues.",
                "definition": "Denotes security labels for the identified object.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.object.securityLabel"
                }
            },
            {
                "mapping": [
                    {
                        "map": "Entity.Label",
                        "identity": "w3c.prov"
                    },
                    {
                        "map": "ParticipantObjectName",
                        "identity": "dicom"
                    },
                    {
                        "map": ".title",
                        "identity": "rim"
                    },
                    {
                        "map": "context",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "isSummary": true,
                "comments": "This field may be used in a query/report to identify audit events for a specific person.  For example, where multiple synonymous Participant Object IDs (patient number, medical record number, encounter number, etc.) have been used.",
                "path": "AuditEvent.object.name",
                "max": "1",
                "min": 0,
                "short": "Instance-specific descriptor for Object",
                "condition": [
                    "sev-1"
                ],
                "definition": "An instance-specific descriptor of the Participant Object ID audited, such as a person's name.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.object.name"
                }
            },
            {
                "mapping": [
                    {
                        "map": "ParticipantObjectDescription",
                        "identity": "dicom"
                    },
                    {
                        "map": ".text",
                        "identity": "rim"
                    },
                    {
                        "map": "context",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "path": "AuditEvent.object.description",
                "max": "1",
                "min": 0,
                "short": "Descriptive text",
                "definition": "Text that describes the object in more detail.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.object.description"
                }
            },
            {
                "mapping": [
                    {
                        "map": "ParticipantObjectQuery",
                        "identity": "dicom"
                    },
                    {
                        "map": "No mapping",
                        "identity": "rim"
                    },
                    {
                        "map": "context",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "base64Binary"
                    }
                ],
                "isSummary": true,
                "path": "AuditEvent.object.query",
                "max": "1",
                "min": 0,
                "short": "Actual query for object",
                "condition": [
                    "sev-1"
                ],
                "requirements": "For query events it may be necessary to capture the actual query input to the query process in order to identify the specific event. Because of differences among query implementations and data encoding for them, this is a base 64 encoded data blob. It may be subsequently decoded or interpreted by downstream audit analysis processing.",
                "definition": "The actual query for a query-type participant object.",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.object.query"
                }
            },
            {
                "mapping": [
                    {
                        "map": "ParticipantObjectDetail",
                        "identity": "dicom"
                    },
                    {
                        "map": ".inboundRelationship[typeCode=SUBJ].target[classCode=OBS, moodCode=EVN]",
                        "identity": "rim"
                    },
                    {
                        "map": "context",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "BackboneElement"
                    }
                ],
                "path": "AuditEvent.object.detail",
                "max": "*",
                "min": 0,
                "short": "Additional Information about the Object",
                "definition": "Additional Information about the Object.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.object.detail"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "id"
                    }
                ],
                "path": "AuditEvent.object.detail.id",
                "representation": [
                    "xmlAttr"
                ],
                "max": "1",
                "min": 0,
                "short": "xml:id (or equivalent in JSON)",
                "definition": "unique id for the element within a resource (for internal references).",
                "base": {
                    "min": 0,
                    "max": "1",
                    "path": "AuditEvent.object.detail.id"
                }
            },
            {
                "mapping": [
                    {
                        "map": "n/a",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.object.detail.extension",
                "alias": [
                    "extensions",
                    "user content"
                ],
                "min": 0,
                "short": "Additional Content defined by implementations",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.object.detail.extension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "N/A",
                        "identity": "rim"
                    }
                ],
                "type": [
                    {
                        "code": "Extension"
                    }
                ],
                "isModifier": true,
                "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
                "path": "AuditEvent.object.detail.modifierExtension",
                "alias": [
                    "extensions",
                    "user content",
                    "modifiers"
                ],
                "min": 0,
                "short": "Extensions that cannot be ignored",
                "max": "*",
                "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
                "base": {
                    "min": 0,
                    "max": "*",
                    "path": "AuditEvent.object.detail.modifierExtension"
                }
            },
            {
                "mapping": [
                    {
                        "map": "ParticipantObjectDetail.type",
                        "identity": "dicom"
                    },
                    {
                        "map": ".code",
                        "identity": "rim"
                    },
                    {
                        "map": "context",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "string"
                    }
                ],
                "path": "AuditEvent.object.detail.type",
                "max": "1",
                "min": 1,
                "short": "Name of the property",
                "definition": "Name of the property.",
                "base": {
                    "min": 1,
                    "max": "1",
                    "path": "AuditEvent.object.detail.type"
                }
            },
            {
                "mapping": [
                    {
                        "map": "ParticipantObjectDetail.value",
                        "identity": "dicom"
                    },
                    {
                        "map": ".value",
                        "identity": "rim"
                    },
                    {
                        "map": "context",
                        "identity": "w5"
                    }
                ],
                "type": [
                    {
                        "code": "base64Binary"
                    }
                ],
                "path": "AuditEvent.object.detail.value",
                "max": "1",
                "min": 1,
                "short": "Property value",
                "definition": "Property value.",
                "base": {
                    "min": 1,
                    "max": "1",
                    "path": "AuditEvent.object.detail.value"
                }
            }
        ]
    },
    "name": "EHRS FM Record Lifecycle Event - Audit Event",
    "description": "Defines the elements to be supported within the AuditEvent resource in order to conform with the Electronic Health Record System Functional Model Record Lifecycle Event standard",
    "status": "draft",
    "date": "2014-12-04",
    "fhirVersion": "1.0.2"
}